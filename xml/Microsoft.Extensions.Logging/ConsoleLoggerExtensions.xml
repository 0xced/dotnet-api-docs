<Type Name="ConsoleLoggerExtensions" FullName="Microsoft.Extensions.Logging.ConsoleLoggerExtensions">
  <TypeSignature Language="C#" Value="public static class ConsoleLoggerExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ConsoleLoggerExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Logging.ConsoleLoggerExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ConsoleLoggerExtensions" />
  <TypeSignature Language="F#" Value="type ConsoleLoggerExtensions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConsoleLoggerExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Logging.Console</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.Versioning.UnsupportedOSPlatform("browser")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.Versioning.UnsupportedOSPlatform("browser")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddConsole">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.ILoggingBuilder AddConsole (this Microsoft.Extensions.Logging.ILoggingBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.ILoggingBuilder AddConsole(class Microsoft.Extensions.Logging.ILoggingBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggingBuilder)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddConsole (builder As ILoggingBuilder) As ILoggingBuilder" />
      <MemberSignature Language="F#" Value="static member AddConsole : Microsoft.Extensions.Logging.ILoggingBuilder -&gt; Microsoft.Extensions.Logging.ILoggingBuilder" Usage="Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::ILoggingBuilder ^ AddConsole(Microsoft::Extensions::Logging::ILoggingBuilder ^ builder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Console</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessage("ReflectionAnalysis", "IL2026:RequiresUnreferencedCode", Justification="AddConsoleFormatter and RegisterProviderOptions are only dangerous when the Options type cannot be statically analyzed, but that is not the case here. The DynamicallyAccessedMembers annotations on them will make sure to preserve the right members from the different options objects.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessage("ReflectionAnalysis", "IL2026:RequiresUnreferencedCode", Justification="AddConsoleFormatter and RegisterProviderOptions are only dangerous when the Options type cannot be statically analyzed, but that is not the case here. The DynamicallyAccessedMembers annotations on them will make sure to preserve the right members from the different options objects.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILoggingBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.ILoggingBuilder" RefType="this" />
      </Parameters>
      <Docs>
        <param name="builder">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddConsole">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.ILoggingBuilder AddConsole (this Microsoft.Extensions.Logging.ILoggingBuilder builder, Action&lt;Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions&gt; configure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.ILoggingBuilder AddConsole(class Microsoft.Extensions.Logging.ILoggingBuilder builder, class System.Action`1&lt;class Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions&gt; configure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggingBuilder,System.Action{Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddConsole (builder As ILoggingBuilder, configure As Action(Of ConsoleLoggerOptions)) As ILoggingBuilder" />
      <MemberSignature Language="F#" Value="static member AddConsole : Microsoft.Extensions.Logging.ILoggingBuilder * Action&lt;Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions&gt; -&gt; Microsoft.Extensions.Logging.ILoggingBuilder" Usage="Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole (builder, configure)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::ILoggingBuilder ^ AddConsole(Microsoft::Extensions::Logging::ILoggingBuilder ^ builder, Action&lt;Microsoft::Extensions::Logging::Console::ConsoleLoggerOptions ^&gt; ^ configure);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Console</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILoggingBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.ILoggingBuilder" RefType="this" />
        <Parameter Name="configure" Type="System.Action&lt;Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions&gt;" />
      </Parameters>
      <Docs>
        <param name="builder">To be added.</param>
        <param name="configure">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddConsoleFormatter&lt;TFormatter,TOptions&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.ILoggingBuilder AddConsoleFormatter&lt;TFormatter,TOptions&gt; (this Microsoft.Extensions.Logging.ILoggingBuilder builder) where TFormatter : Microsoft.Extensions.Logging.Console.ConsoleFormatter where TOptions : Microsoft.Extensions.Logging.Console.ConsoleFormatterOptions;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.ILoggingBuilder AddConsoleFormatter&lt;(class Microsoft.Extensions.Logging.Console.ConsoleFormatter) TFormatter, (class Microsoft.Extensions.Logging.Console.ConsoleFormatterOptions) TOptions&gt;(class Microsoft.Extensions.Logging.ILoggingBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsoleFormatter``2(Microsoft.Extensions.Logging.ILoggingBuilder)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddConsoleFormatter(Of TFormatter As ConsoleFormatter, TOptions As ConsoleFormatter) (builder As ILoggingBuilder) As ILoggingBuilder" />
      <MemberSignature Language="F#" Value="static member AddConsoleFormatter : Microsoft.Extensions.Logging.ILoggingBuilder -&gt; Microsoft.Extensions.Logging.ILoggingBuilder (requires 'Formatter :&gt; Microsoft.Extensions.Logging.Console.ConsoleFormatter and 'Options :&gt; Microsoft.Extensions.Logging.Console.ConsoleFormatterOptions)" Usage="Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsoleFormatter builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TFormatter, typename TOptions&gt;&#xA; where TFormatter : Microsoft::Extensions::Logging::Console::ConsoleFormatter where TOptions : Microsoft::Extensions::Logging::Console::ConsoleFormatterOptions[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::ILoggingBuilder ^ AddConsoleFormatter(Microsoft::Extensions::Logging::ILoggingBuilder ^ builder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Console</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("TOptions's dependent types may have their members trimmed. Ensure all required members are preserved.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("TOptions's dependent types may have their members trimmed. Ensure all required members are preserved.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILoggingBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TFormatter">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
          <Constraints>
            <BaseTypeName>Microsoft.Extensions.Logging.Console.ConsoleFormatter</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TOptions">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.All)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.All)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
          <Constraints>
            <BaseTypeName>Microsoft.Extensions.Logging.Console.ConsoleFormatterOptions</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.ILoggingBuilder" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TFormatter">To be added.</typeparam>
        <typeparam name="TOptions">To be added.</typeparam>
        <param name="builder">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddConsoleFormatter&lt;TFormatter,TOptions&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.ILoggingBuilder AddConsoleFormatter&lt;TFormatter,TOptions&gt; (this Microsoft.Extensions.Logging.ILoggingBuilder builder, Action&lt;TOptions&gt; configure) where TFormatter : Microsoft.Extensions.Logging.Console.ConsoleFormatter where TOptions : Microsoft.Extensions.Logging.Console.ConsoleFormatterOptions;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.ILoggingBuilder AddConsoleFormatter&lt;(class Microsoft.Extensions.Logging.Console.ConsoleFormatter) TFormatter, (class Microsoft.Extensions.Logging.Console.ConsoleFormatterOptions) TOptions&gt;(class Microsoft.Extensions.Logging.ILoggingBuilder builder, class System.Action`1&lt;!!TOptions&gt; configure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsoleFormatter``2(Microsoft.Extensions.Logging.ILoggingBuilder,System.Action{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddConsoleFormatter(Of TFormatter As ConsoleFormatter, TOptions As ConsoleFormatter) (builder As ILoggingBuilder, configure As Action(Of TOptions)) As ILoggingBuilder" />
      <MemberSignature Language="F#" Value="static member AddConsoleFormatter : Microsoft.Extensions.Logging.ILoggingBuilder * Action&lt;'Options (requires 'Options :&gt; Microsoft.Extensions.Logging.Console.ConsoleFormatterOptions)&gt; -&gt; Microsoft.Extensions.Logging.ILoggingBuilder (requires 'Formatter :&gt; Microsoft.Extensions.Logging.Console.ConsoleFormatter and 'Options :&gt; Microsoft.Extensions.Logging.Console.ConsoleFormatterOptions)" Usage="Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsoleFormatter (builder, configure)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TFormatter, typename TOptions&gt;&#xA; where TFormatter : Microsoft::Extensions::Logging::Console::ConsoleFormatter where TOptions : Microsoft::Extensions::Logging::Console::ConsoleFormatterOptions[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::ILoggingBuilder ^ AddConsoleFormatter(Microsoft::Extensions::Logging::ILoggingBuilder ^ builder, Action&lt;TOptions&gt; ^ configure);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Console</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("TOptions's dependent types may have their members trimmed. Ensure all required members are preserved.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("TOptions's dependent types may have their members trimmed. Ensure all required members are preserved.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILoggingBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TFormatter">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
          <Constraints>
            <BaseTypeName>Microsoft.Extensions.Logging.Console.ConsoleFormatter</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TOptions">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.All)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.All)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
          <Constraints>
            <BaseTypeName>Microsoft.Extensions.Logging.Console.ConsoleFormatterOptions</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.ILoggingBuilder" RefType="this" />
        <Parameter Name="configure" Type="System.Action&lt;TOptions&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TFormatter">To be added.</typeparam>
        <typeparam name="TOptions">To be added.</typeparam>
        <param name="builder">To be added.</param>
        <param name="configure">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddJsonConsole">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.ILoggingBuilder AddJsonConsole (this Microsoft.Extensions.Logging.ILoggingBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.ILoggingBuilder AddJsonConsole(class Microsoft.Extensions.Logging.ILoggingBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddJsonConsole(Microsoft.Extensions.Logging.ILoggingBuilder)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddJsonConsole (builder As ILoggingBuilder) As ILoggingBuilder" />
      <MemberSignature Language="F#" Value="static member AddJsonConsole : Microsoft.Extensions.Logging.ILoggingBuilder -&gt; Microsoft.Extensions.Logging.ILoggingBuilder" Usage="Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddJsonConsole builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::ILoggingBuilder ^ AddJsonConsole(Microsoft::Extensions::Logging::ILoggingBuilder ^ builder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Console</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILoggingBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.ILoggingBuilder" RefType="this" />
      </Parameters>
      <Docs>
        <param name="builder">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddJsonConsole">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.ILoggingBuilder AddJsonConsole (this Microsoft.Extensions.Logging.ILoggingBuilder builder, Action&lt;Microsoft.Extensions.Logging.Console.JsonConsoleFormatterOptions&gt; configure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.ILoggingBuilder AddJsonConsole(class Microsoft.Extensions.Logging.ILoggingBuilder builder, class System.Action`1&lt;class Microsoft.Extensions.Logging.Console.JsonConsoleFormatterOptions&gt; configure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddJsonConsole(Microsoft.Extensions.Logging.ILoggingBuilder,System.Action{Microsoft.Extensions.Logging.Console.JsonConsoleFormatterOptions})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddJsonConsole (builder As ILoggingBuilder, configure As Action(Of JsonConsoleFormatterOptions)) As ILoggingBuilder" />
      <MemberSignature Language="F#" Value="static member AddJsonConsole : Microsoft.Extensions.Logging.ILoggingBuilder * Action&lt;Microsoft.Extensions.Logging.Console.JsonConsoleFormatterOptions&gt; -&gt; Microsoft.Extensions.Logging.ILoggingBuilder" Usage="Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddJsonConsole (builder, configure)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::ILoggingBuilder ^ AddJsonConsole(Microsoft::Extensions::Logging::ILoggingBuilder ^ builder, Action&lt;Microsoft::Extensions::Logging::Console::JsonConsoleFormatterOptions ^&gt; ^ configure);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Console</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILoggingBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.ILoggingBuilder" RefType="this" />
        <Parameter Name="configure" Type="System.Action&lt;Microsoft.Extensions.Logging.Console.JsonConsoleFormatterOptions&gt;" />
      </Parameters>
      <Docs>
        <param name="builder">To be added.</param>
        <param name="configure">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSimpleConsole">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.ILoggingBuilder AddSimpleConsole (this Microsoft.Extensions.Logging.ILoggingBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.ILoggingBuilder AddSimpleConsole(class Microsoft.Extensions.Logging.ILoggingBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddSimpleConsole(Microsoft.Extensions.Logging.ILoggingBuilder)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddSimpleConsole (builder As ILoggingBuilder) As ILoggingBuilder" />
      <MemberSignature Language="F#" Value="static member AddSimpleConsole : Microsoft.Extensions.Logging.ILoggingBuilder -&gt; Microsoft.Extensions.Logging.ILoggingBuilder" Usage="Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddSimpleConsole builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::ILoggingBuilder ^ AddSimpleConsole(Microsoft::Extensions::Logging::ILoggingBuilder ^ builder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Console</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILoggingBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.ILoggingBuilder" RefType="this" />
      </Parameters>
      <Docs>
        <param name="builder">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSimpleConsole">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.ILoggingBuilder AddSimpleConsole (this Microsoft.Extensions.Logging.ILoggingBuilder builder, Action&lt;Microsoft.Extensions.Logging.Console.SimpleConsoleFormatterOptions&gt; configure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.ILoggingBuilder AddSimpleConsole(class Microsoft.Extensions.Logging.ILoggingBuilder builder, class System.Action`1&lt;class Microsoft.Extensions.Logging.Console.SimpleConsoleFormatterOptions&gt; configure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddSimpleConsole(Microsoft.Extensions.Logging.ILoggingBuilder,System.Action{Microsoft.Extensions.Logging.Console.SimpleConsoleFormatterOptions})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddSimpleConsole (builder As ILoggingBuilder, configure As Action(Of SimpleConsoleFormatterOptions)) As ILoggingBuilder" />
      <MemberSignature Language="F#" Value="static member AddSimpleConsole : Microsoft.Extensions.Logging.ILoggingBuilder * Action&lt;Microsoft.Extensions.Logging.Console.SimpleConsoleFormatterOptions&gt; -&gt; Microsoft.Extensions.Logging.ILoggingBuilder" Usage="Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddSimpleConsole (builder, configure)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::ILoggingBuilder ^ AddSimpleConsole(Microsoft::Extensions::Logging::ILoggingBuilder ^ builder, Action&lt;Microsoft::Extensions::Logging::Console::SimpleConsoleFormatterOptions ^&gt; ^ configure);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Console</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILoggingBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.ILoggingBuilder" RefType="this" />
        <Parameter Name="configure" Type="System.Action&lt;Microsoft.Extensions.Logging.Console.SimpleConsoleFormatterOptions&gt;" />
      </Parameters>
      <Docs>
        <param name="builder">To be added.</param>
        <param name="configure">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSystemdConsole">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.ILoggingBuilder AddSystemdConsole (this Microsoft.Extensions.Logging.ILoggingBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.ILoggingBuilder AddSystemdConsole(class Microsoft.Extensions.Logging.ILoggingBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddSystemdConsole(Microsoft.Extensions.Logging.ILoggingBuilder)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddSystemdConsole (builder As ILoggingBuilder) As ILoggingBuilder" />
      <MemberSignature Language="F#" Value="static member AddSystemdConsole : Microsoft.Extensions.Logging.ILoggingBuilder -&gt; Microsoft.Extensions.Logging.ILoggingBuilder" Usage="Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddSystemdConsole builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::ILoggingBuilder ^ AddSystemdConsole(Microsoft::Extensions::Logging::ILoggingBuilder ^ builder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Console</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILoggingBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.ILoggingBuilder" RefType="this" />
      </Parameters>
      <Docs>
        <param name="builder">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSystemdConsole">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.ILoggingBuilder AddSystemdConsole (this Microsoft.Extensions.Logging.ILoggingBuilder builder, Action&lt;Microsoft.Extensions.Logging.Console.ConsoleFormatterOptions&gt; configure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.ILoggingBuilder AddSystemdConsole(class Microsoft.Extensions.Logging.ILoggingBuilder builder, class System.Action`1&lt;class Microsoft.Extensions.Logging.Console.ConsoleFormatterOptions&gt; configure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddSystemdConsole(Microsoft.Extensions.Logging.ILoggingBuilder,System.Action{Microsoft.Extensions.Logging.Console.ConsoleFormatterOptions})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddSystemdConsole (builder As ILoggingBuilder, configure As Action(Of ConsoleFormatterOptions)) As ILoggingBuilder" />
      <MemberSignature Language="F#" Value="static member AddSystemdConsole : Microsoft.Extensions.Logging.ILoggingBuilder * Action&lt;Microsoft.Extensions.Logging.Console.ConsoleFormatterOptions&gt; -&gt; Microsoft.Extensions.Logging.ILoggingBuilder" Usage="Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddSystemdConsole (builder, configure)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::ILoggingBuilder ^ AddSystemdConsole(Microsoft::Extensions::Logging::ILoggingBuilder ^ builder, Action&lt;Microsoft::Extensions::Logging::Console::ConsoleFormatterOptions ^&gt; ^ configure);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Console</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILoggingBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.ILoggingBuilder" RefType="this" />
        <Parameter Name="configure" Type="System.Action&lt;Microsoft.Extensions.Logging.Console.ConsoleFormatterOptions&gt;" />
      </Parameters>
      <Docs>
        <param name="builder">To be added.</param>
        <param name="configure">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
