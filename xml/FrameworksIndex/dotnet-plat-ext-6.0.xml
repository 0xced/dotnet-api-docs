<?xml version="1.0" encoding="utf-8"?>
<Framework Name="dotnet-plat-ext-6.0">
  <Assemblies>
    <Assembly Name="System.Security.Permissions" Version="6.0.0.0" />
  </Assemblies>
  <Namespace Name="System">
    <Type Name="System.ApplicationIdentity" Id="T:System.ApplicationIdentity">
      <Member Id="M:System.ApplicationIdentity.#ctor(System.String)" />
      <Member Id="M:System.ApplicationIdentity.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="M:System.ApplicationIdentity.ToString" />
      <Member Id="P:System.ApplicationIdentity.CodeBase" />
      <Member Id="P:System.ApplicationIdentity.FullName" />
    </Type>
  </Namespace>
  <Namespace Name="System.Configuration">
    <Type Name="System.Configuration.ConfigurationPermission" Id="T:System.Configuration.ConfigurationPermission">
      <Member Id="M:System.Configuration.ConfigurationPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <Member Id="M:System.Configuration.ConfigurationPermission.Copy" />
      <Member Id="M:System.Configuration.ConfigurationPermission.FromXml(System.Security.SecurityElement)" />
      <Member Id="M:System.Configuration.ConfigurationPermission.Intersect(System.Security.IPermission)" />
      <Member Id="M:System.Configuration.ConfigurationPermission.IsSubsetOf(System.Security.IPermission)" />
      <Member Id="M:System.Configuration.ConfigurationPermission.IsUnrestricted" />
      <Member Id="M:System.Configuration.ConfigurationPermission.ToXml" />
      <Member Id="M:System.Configuration.ConfigurationPermission.Union(System.Security.IPermission)" />
    </Type>
    <Type Name="System.Configuration.ConfigurationPermissionAttribute" Id="T:System.Configuration.ConfigurationPermissionAttribute">
      <Member Id="M:System.Configuration.ConfigurationPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <Member Id="M:System.Configuration.ConfigurationPermissionAttribute.CreatePermission" />
    </Type>
  </Namespace>
  <Namespace Name="System.Data.Common">
    <Type Name="System.Data.Common.DBDataPermission" Id="T:System.Data.Common.DBDataPermission">
      <Member Id="M:System.Data.Common.DBDataPermission.#ctor" />
      <Member Id="M:System.Data.Common.DBDataPermission.#ctor(System.Data.Common.DBDataPermission)" />
      <Member Id="M:System.Data.Common.DBDataPermission.#ctor(System.Data.Common.DBDataPermissionAttribute)" />
      <Member Id="M:System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <Member Id="M:System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)" />
      <Member Id="M:System.Data.Common.DBDataPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)" />
      <Member Id="M:System.Data.Common.DBDataPermission.Clear" />
      <Member Id="M:System.Data.Common.DBDataPermission.Copy" />
      <Member Id="M:System.Data.Common.DBDataPermission.CreateInstance" />
      <Member Id="M:System.Data.Common.DBDataPermission.FromXml(System.Security.SecurityElement)" />
      <Member Id="M:System.Data.Common.DBDataPermission.Intersect(System.Security.IPermission)" />
      <Member Id="M:System.Data.Common.DBDataPermission.IsSubsetOf(System.Security.IPermission)" />
      <Member Id="M:System.Data.Common.DBDataPermission.IsUnrestricted" />
      <Member Id="M:System.Data.Common.DBDataPermission.ToXml" />
      <Member Id="M:System.Data.Common.DBDataPermission.Union(System.Security.IPermission)" />
      <Member Id="P:System.Data.Common.DBDataPermission.AllowBlankPassword" />
    </Type>
    <Type Name="System.Data.Common.DBDataPermissionAttribute" Id="T:System.Data.Common.DBDataPermissionAttribute">
      <Member Id="M:System.Data.Common.DBDataPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <Member Id="M:System.Data.Common.DBDataPermissionAttribute.ShouldSerializeConnectionString" />
      <Member Id="M:System.Data.Common.DBDataPermissionAttribute.ShouldSerializeKeyRestrictions" />
      <Member Id="P:System.Data.Common.DBDataPermissionAttribute.AllowBlankPassword" />
      <Member Id="P:System.Data.Common.DBDataPermissionAttribute.ConnectionString" />
      <Member Id="P:System.Data.Common.DBDataPermissionAttribute.KeyRestrictionBehavior" />
      <Member Id="P:System.Data.Common.DBDataPermissionAttribute.KeyRestrictions" />
    </Type>
  </Namespace>
  <Namespace Name="System.Data.Odbc">
    <Type Name="System.Data.Odbc.OdbcPermission" Id="T:System.Data.Odbc.OdbcPermission">
      <Member Id="M:System.Data.Odbc.OdbcPermission.#ctor" />
      <Member Id="M:System.Data.Odbc.OdbcPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <Member Id="M:System.Data.Odbc.OdbcPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)" />
      <Member Id="M:System.Data.Odbc.OdbcPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)" />
      <Member Id="M:System.Data.Odbc.OdbcPermission.Copy" />
    </Type>
    <Type Name="System.Data.Odbc.OdbcPermissionAttribute" Id="T:System.Data.Odbc.OdbcPermissionAttribute">
      <Member Id="M:System.Data.Odbc.OdbcPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <Member Id="M:System.Data.Odbc.OdbcPermissionAttribute.CreatePermission" />
    </Type>
  </Namespace>
  <Namespace Name="System.Data.OleDb">
    <Type Name="System.Data.OleDb.OleDbPermission" Id="T:System.Data.OleDb.OleDbPermission">
      <Member Id="M:System.Data.OleDb.OleDbPermission.#ctor" />
      <Member Id="M:System.Data.OleDb.OleDbPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <Member Id="M:System.Data.OleDb.OleDbPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)" />
      <Member Id="M:System.Data.OleDb.OleDbPermission.Copy" />
      <Member Id="P:System.Data.OleDb.OleDbPermission.Provider" />
    </Type>
    <Type Name="System.Data.OleDb.OleDbPermissionAttribute" Id="T:System.Data.OleDb.OleDbPermissionAttribute">
      <Member Id="M:System.Data.OleDb.OleDbPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <Member Id="M:System.Data.OleDb.OleDbPermissionAttribute.CreatePermission" />
      <Member Id="P:System.Data.OleDb.OleDbPermissionAttribute.Provider" />
    </Type>
  </Namespace>
  <Namespace Name="System.Data.OracleClient">
    <Type Name="System.Data.OracleClient.OraclePermission" Id="T:System.Data.OracleClient.OraclePermission">
      <Member Id="M:System.Data.OracleClient.OraclePermission.#ctor(System.Security.Permissions.PermissionState)" />
      <Member Id="M:System.Data.OracleClient.OraclePermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)" />
      <Member Id="M:System.Data.OracleClient.OraclePermission.Copy" />
      <Member Id="M:System.Data.OracleClient.OraclePermission.FromXml(System.Security.SecurityElement)" />
      <Member Id="M:System.Data.OracleClient.OraclePermission.Intersect(System.Security.IPermission)" />
      <Member Id="M:System.Data.OracleClient.OraclePermission.IsSubsetOf(System.Security.IPermission)" />
      <Member Id="M:System.Data.OracleClient.OraclePermission.IsUnrestricted" />
      <Member Id="M:System.Data.OracleClient.OraclePermission.ToXml" />
      <Member Id="M:System.Data.OracleClient.OraclePermission.Union(System.Security.IPermission)" />
      <Member Id="P:System.Data.OracleClient.OraclePermission.AllowBlankPassword" />
    </Type>
    <Type Name="System.Data.OracleClient.OraclePermissionAttribute" Id="T:System.Data.OracleClient.OraclePermissionAttribute">
      <Member Id="M:System.Data.OracleClient.OraclePermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <Member Id="M:System.Data.OracleClient.OraclePermissionAttribute.CreatePermission" />
      <Member Id="M:System.Data.OracleClient.OraclePermissionAttribute.ShouldSerializeConnectionString" />
      <Member Id="M:System.Data.OracleClient.OraclePermissionAttribute.ShouldSerializeKeyRestrictions" />
      <Member Id="P:System.Data.OracleClient.OraclePermissionAttribute.AllowBlankPassword" />
      <Member Id="P:System.Data.OracleClient.OraclePermissionAttribute.ConnectionString" />
      <Member Id="P:System.Data.OracleClient.OraclePermissionAttribute.KeyRestrictionBehavior" />
      <Member Id="P:System.Data.OracleClient.OraclePermissionAttribute.KeyRestrictions" />
    </Type>
  </Namespace>
  <Namespace Name="System.Data.SqlClient">
    <Type Name="System.Data.SqlClient.SqlClientPermission" Id="T:System.Data.SqlClient.SqlClientPermission">
      <Member Id="M:System.Data.SqlClient.SqlClientPermission.#ctor" />
      <Member Id="M:System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <Member Id="M:System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)" />
      <Member Id="M:System.Data.SqlClient.SqlClientPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)" />
      <Member Id="M:System.Data.SqlClient.SqlClientPermission.Copy" />
    </Type>
    <Type Name="System.Data.SqlClient.SqlClientPermissionAttribute" Id="T:System.Data.SqlClient.SqlClientPermissionAttribute">
      <Member Id="M:System.Data.SqlClient.SqlClientPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <Member Id="M:System.Data.SqlClient.SqlClientPermissionAttribute.CreatePermission" />
    </Type>
  </Namespace>
  <Namespace Name="System.Diagnostics">
    <Type Name="System.Diagnostics.EventLogPermission" Id="T:System.Diagnostics.EventLogPermission">
      <Member Id="M:System.Diagnostics.EventLogPermission.#ctor" />
      <Member Id="M:System.Diagnostics.EventLogPermission.#ctor(System.Diagnostics.EventLogPermissionAccess,System.String)" />
      <Member Id="M:System.Diagnostics.EventLogPermission.#ctor(System.Diagnostics.EventLogPermissionEntry[])" />
      <Member Id="M:System.Diagnostics.EventLogPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <Member Id="P:System.Diagnostics.EventLogPermission.PermissionEntries" />
    </Type>
    <Type Name="System.Diagnostics.EventLogPermissionAccess" Id="T:System.Diagnostics.EventLogPermissionAccess">
      <Member Id="F:System.Diagnostics.EventLogPermissionAccess.Administer" />
      <Member Id="F:System.Diagnostics.EventLogPermissionAccess.Audit" />
      <Member Id="F:System.Diagnostics.EventLogPermissionAccess.Browse" />
      <Member Id="F:System.Diagnostics.EventLogPermissionAccess.Instrument" />
      <Member Id="F:System.Diagnostics.EventLogPermissionAccess.None" />
      <Member Id="F:System.Diagnostics.EventLogPermissionAccess.Write" />
    </Type>
    <Type Name="System.Diagnostics.EventLogPermissionAttribute" Id="T:System.Diagnostics.EventLogPermissionAttribute">
      <Member Id="M:System.Diagnostics.EventLogPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <Member Id="M:System.Diagnostics.EventLogPermissionAttribute.CreatePermission" />
      <Member Id="P:System.Diagnostics.EventLogPermissionAttribute.MachineName" />
      <Member Id="P:System.Diagnostics.EventLogPermissionAttribute.PermissionAccess" />
    </Type>
    <Type Name="System.Diagnostics.EventLogPermissionEntry" Id="T:System.Diagnostics.EventLogPermissionEntry">
      <Member Id="M:System.Diagnostics.EventLogPermissionEntry.#ctor(System.Diagnostics.EventLogPermissionAccess,System.String)" />
      <Member Id="P:System.Diagnostics.EventLogPermissionEntry.MachineName" />
      <Member Id="P:System.Diagnostics.EventLogPermissionEntry.PermissionAccess" />
    </Type>
    <Type Name="System.Diagnostics.EventLogPermissionEntryCollection" Id="T:System.Diagnostics.EventLogPermissionEntryCollection">
      <Member Id="M:System.Diagnostics.EventLogPermissionEntryCollection.Add(System.Diagnostics.EventLogPermissionEntry)" />
      <Member Id="M:System.Diagnostics.EventLogPermissionEntryCollection.AddRange(System.Diagnostics.EventLogPermissionEntry[])" />
      <Member Id="M:System.Diagnostics.EventLogPermissionEntryCollection.AddRange(System.Diagnostics.EventLogPermissionEntryCollection)" />
      <Member Id="M:System.Diagnostics.EventLogPermissionEntryCollection.Contains(System.Diagnostics.EventLogPermissionEntry)" />
      <Member Id="M:System.Diagnostics.EventLogPermissionEntryCollection.CopyTo(System.Diagnostics.EventLogPermissionEntry[],System.Int32)" />
      <Member Id="M:System.Diagnostics.EventLogPermissionEntryCollection.IndexOf(System.Diagnostics.EventLogPermissionEntry)" />
      <Member Id="M:System.Diagnostics.EventLogPermissionEntryCollection.Insert(System.Int32,System.Diagnostics.EventLogPermissionEntry)" />
      <Member Id="M:System.Diagnostics.EventLogPermissionEntryCollection.OnClear" />
      <Member Id="M:System.Diagnostics.EventLogPermissionEntryCollection.OnInsert(System.Int32,System.Object)" />
      <Member Id="M:System.Diagnostics.EventLogPermissionEntryCollection.OnRemove(System.Int32,System.Object)" />
      <Member Id="M:System.Diagnostics.EventLogPermissionEntryCollection.OnSet(System.Int32,System.Object,System.Object)" />
      <Member Id="M:System.Diagnostics.EventLogPermissionEntryCollection.Remove(System.Diagnostics.EventLogPermissionEntry)" />
      <Member Id="P:System.Diagnostics.EventLogPermissionEntryCollection.Item(System.Int32)" />
    </Type>
    <Type Name="System.Diagnostics.PerformanceCounterPermission" Id="T:System.Diagnostics.PerformanceCounterPermission">
      <Member Id="M:System.Diagnostics.PerformanceCounterPermission.#ctor" />
      <Member Id="M:System.Diagnostics.PerformanceCounterPermission.#ctor(System.Diagnostics.PerformanceCounterPermissionAccess,System.String,System.String)" />
      <Member Id="M:System.Diagnostics.PerformanceCounterPermission.#ctor(System.Diagnostics.PerformanceCounterPermissionEntry[])" />
      <Member Id="M:System.Diagnostics.PerformanceCounterPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <Member Id="P:System.Diagnostics.PerformanceCounterPermission.PermissionEntries" />
    </Type>
    <Type Name="System.Diagnostics.PerformanceCounterPermissionAccess" Id="T:System.Diagnostics.PerformanceCounterPermissionAccess">
      <Member Id="F:System.Diagnostics.PerformanceCounterPermissionAccess.Administer" />
      <Member Id="F:System.Diagnostics.PerformanceCounterPermissionAccess.Browse" />
      <Member Id="F:System.Diagnostics.PerformanceCounterPermissionAccess.Instrument" />
      <Member Id="F:System.Diagnostics.PerformanceCounterPermissionAccess.None" />
      <Member Id="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />
      <Member Id="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" />
    </Type>
    <Type Name="System.Diagnostics.PerformanceCounterPermissionAttribute" Id="T:System.Diagnostics.PerformanceCounterPermissionAttribute">
      <Member Id="M:System.Diagnostics.PerformanceCounterPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <Member Id="M:System.Diagnostics.PerformanceCounterPermissionAttribute.CreatePermission" />
      <Member Id="P:System.Diagnostics.PerformanceCounterPermissionAttribute.CategoryName" />
      <Member Id="P:System.Diagnostics.PerformanceCounterPermissionAttribute.MachineName" />
      <Member Id="P:System.Diagnostics.PerformanceCounterPermissionAttribute.PermissionAccess" />
    </Type>
    <Type Name="System.Diagnostics.PerformanceCounterPermissionEntry" Id="T:System.Diagnostics.PerformanceCounterPermissionEntry">
      <Member Id="M:System.Diagnostics.PerformanceCounterPermissionEntry.#ctor(System.Diagnostics.PerformanceCounterPermissionAccess,System.String,System.String)" />
      <Member Id="P:System.Diagnostics.PerformanceCounterPermissionEntry.CategoryName" />
      <Member Id="P:System.Diagnostics.PerformanceCounterPermissionEntry.MachineName" />
      <Member Id="P:System.Diagnostics.PerformanceCounterPermissionEntry.PermissionAccess" />
    </Type>
    <Type Name="System.Diagnostics.PerformanceCounterPermissionEntryCollection" Id="T:System.Diagnostics.PerformanceCounterPermissionEntryCollection">
      <Member Id="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Add(System.Diagnostics.PerformanceCounterPermissionEntry)" />
      <Member Id="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.AddRange(System.Diagnostics.PerformanceCounterPermissionEntry[])" />
      <Member Id="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.AddRange(System.Diagnostics.PerformanceCounterPermissionEntryCollection)" />
      <Member Id="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Contains(System.Diagnostics.PerformanceCounterPermissionEntry)" />
      <Member Id="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.CopyTo(System.Diagnostics.PerformanceCounterPermissionEntry[],System.Int32)" />
      <Member Id="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.IndexOf(System.Diagnostics.PerformanceCounterPermissionEntry)" />
      <Member Id="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Insert(System.Int32,System.Diagnostics.PerformanceCounterPermissionEntry)" />
      <Member Id="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.OnClear" />
      <Member Id="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.OnInsert(System.Int32,System.Object)" />
      <Member Id="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.OnRemove(System.Int32,System.Object)" />
      <Member Id="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.OnSet(System.Int32,System.Object,System.Object)" />
      <Member Id="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Remove(System.Diagnostics.PerformanceCounterPermissionEntry)" />
      <Member Id="P:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Item(System.Int32)" />
    </Type>
  </Namespace>
  <Namespace Name="System.Drawing.Printing">
    <Type Name="System.Drawing.Printing.PrintingPermission" Id="T:System.Drawing.Printing.PrintingPermission">
      <Member Id="M:System.Drawing.Printing.PrintingPermission.#ctor(System.Drawing.Printing.PrintingPermissionLevel)" />
      <Member Id="M:System.Drawing.Printing.PrintingPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <Member Id="M:System.Drawing.Printing.PrintingPermission.Copy" />
      <Member Id="M:System.Drawing.Printing.PrintingPermission.FromXml(System.Security.SecurityElement)" />
      <Member Id="M:System.Drawing.Printing.PrintingPermission.Intersect(System.Security.IPermission)" />
      <Member Id="M:System.Drawing.Printing.PrintingPermission.IsSubsetOf(System.Security.IPermission)" />
      <Member Id="M:System.Drawing.Printing.PrintingPermission.IsUnrestricted" />
      <Member Id="M:System.Drawing.Printing.PrintingPermission.ToXml" />
      <Member Id="M:System.Drawing.Printing.PrintingPermission.Union(System.Security.IPermission)" />
      <Member Id="P:System.Drawing.Printing.PrintingPermission.Level" />
    </Type>
    <Type Name="System.Drawing.Printing.PrintingPermissionAttribute" Id="T:System.Drawing.Printing.PrintingPermissionAttribute">
      <Member Id="M:System.Drawing.Printing.PrintingPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <Member Id="M:System.Drawing.Printing.PrintingPermissionAttribute.CreatePermission" />
      <Member Id="P:System.Drawing.Printing.PrintingPermissionAttribute.Level" />
    </Type>
    <Type Name="System.Drawing.Printing.PrintingPermissionLevel" Id="T:System.Drawing.Printing.PrintingPermissionLevel">
      <Member Id="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting" />
      <Member Id="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" />
      <Member Id="F:System.Drawing.Printing.PrintingPermissionLevel.NoPrinting" />
      <Member Id="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting" />
    </Type>
  </Namespace>
  <Namespace Name="System.Net">
    <Type Name="System.Net.DnsPermission" Id="T:System.Net.DnsPermission">
      <Member Id="M:System.Net.DnsPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <Member Id="M:System.Net.DnsPermission.Copy" />
      <Member Id="M:System.Net.DnsPermission.FromXml(System.Security.SecurityElement)" />
      <Member Id="M:System.Net.DnsPermission.Intersect(System.Security.IPermission)" />
      <Member Id="M:System.Net.DnsPermission.IsSubsetOf(System.Security.IPermission)" />
      <Member Id="M:System.Net.DnsPermission.IsUnrestricted" />
      <Member Id="M:System.Net.DnsPermission.ToXml" />
      <Member Id="M:System.Net.DnsPermission.Union(System.Security.IPermission)" />
    </Type>
    <Type Name="System.Net.DnsPermissionAttribute" Id="T:System.Net.DnsPermissionAttribute">
      <Member Id="M:System.Net.DnsPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <Member Id="M:System.Net.DnsPermissionAttribute.CreatePermission" />
    </Type>
    <Type Name="System.Net.EndpointPermission" Id="T:System.Net.EndpointPermission">
      <Member Id="M:System.Net.EndpointPermission.Equals(System.Object)" />
      <Member Id="M:System.Net.EndpointPermission.GetHashCode" />
      <Member Id="P:System.Net.EndpointPermission.Hostname" />
      <Member Id="P:System.Net.EndpointPermission.Port" />
      <Member Id="P:System.Net.EndpointPermission.Transport" />
    </Type>
    <Type Name="System.Net.NetworkAccess" Id="T:System.Net.NetworkAccess">
      <Member Id="F:System.Net.NetworkAccess.Accept" />
      <Member Id="F:System.Net.NetworkAccess.Connect" />
    </Type>
    <Type Name="System.Net.SocketPermission" Id="T:System.Net.SocketPermission">
      <Member Id="F:System.Net.SocketPermission.AllPorts" />
      <Member Id="M:System.Net.SocketPermission.#ctor(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)" />
      <Member Id="M:System.Net.SocketPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <Member Id="M:System.Net.SocketPermission.AddPermission(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)" />
      <Member Id="M:System.Net.SocketPermission.Copy" />
      <Member Id="M:System.Net.SocketPermission.FromXml(System.Security.SecurityElement)" />
      <Member Id="M:System.Net.SocketPermission.Intersect(System.Security.IPermission)" />
      <Member Id="M:System.Net.SocketPermission.IsSubsetOf(System.Security.IPermission)" />
      <Member Id="M:System.Net.SocketPermission.IsUnrestricted" />
      <Member Id="M:System.Net.SocketPermission.ToXml" />
      <Member Id="M:System.Net.SocketPermission.Union(System.Security.IPermission)" />
      <Member Id="P:System.Net.SocketPermission.AcceptList" />
      <Member Id="P:System.Net.SocketPermission.ConnectList" />
    </Type>
    <Type Name="System.Net.SocketPermissionAttribute" Id="T:System.Net.SocketPermissionAttribute">
      <Member Id="M:System.Net.SocketPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <Member Id="M:System.Net.SocketPermissionAttribute.CreatePermission" />
      <Member Id="P:System.Net.SocketPermissionAttribute.Access" />
      <Member Id="P:System.Net.SocketPermissionAttribute.Host" />
      <Member Id="P:System.Net.SocketPermissionAttribute.Port" />
      <Member Id="P:System.Net.SocketPermissionAttribute.Transport" />
    </Type>
    <Type Name="System.Net.TransportType" Id="T:System.Net.TransportType">
      <Member Id="F:System.Net.TransportType.All" />
      <Member Id="F:System.Net.TransportType.Connectionless" />
      <Member Id="F:System.Net.TransportType.ConnectionOriented" />
      <Member Id="F:System.Net.TransportType.Tcp" />
      <Member Id="F:System.Net.TransportType.Udp" />
    </Type>
    <Type Name="System.Net.WebPermission" Id="T:System.Net.WebPermission">
      <Member Id="M:System.Net.WebPermission.#ctor" />
      <Member Id="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.String)" />
      <Member Id="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)" />
      <Member Id="M:System.Net.WebPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <Member Id="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)" />
      <Member Id="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)" />
      <Member Id="M:System.Net.WebPermission.Copy" />
      <Member Id="M:System.Net.WebPermission.FromXml(System.Security.SecurityElement)" />
      <Member Id="M:System.Net.WebPermission.Intersect(System.Security.IPermission)" />
      <Member Id="M:System.Net.WebPermission.IsSubsetOf(System.Security.IPermission)" />
      <Member Id="M:System.Net.WebPermission.IsUnrestricted" />
      <Member Id="M:System.Net.WebPermission.ToXml" />
      <Member Id="M:System.Net.WebPermission.Union(System.Security.IPermission)" />
      <Member Id="P:System.Net.WebPermission.AcceptList" />
      <Member Id="P:System.Net.WebPermission.ConnectList" />
    </Type>
    <Type Name="System.Net.WebPermissionAttribute" Id="T:System.Net.WebPermissionAttribute">
      <Member Id="M:System.Net.WebPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <Member Id="M:System.Net.WebPermissionAttribute.CreatePermission" />
      <Member Id="P:System.Net.WebPermissionAttribute.Accept" />
      <Member Id="P:System.Net.WebPermissionAttribute.AcceptPattern" />
      <Member Id="P:System.Net.WebPermissionAttribute.Connect" />
      <Member Id="P:System.Net.WebPermissionAttribute.ConnectPattern" />
    </Type>
  </Namespace>
  <Namespace Name="System.Net.Mail">
    <Type Name="System.Net.Mail.SmtpAccess" Id="T:System.Net.Mail.SmtpAccess">
      <Member Id="F:System.Net.Mail.SmtpAccess.Connect" />
      <Member Id="F:System.Net.Mail.SmtpAccess.ConnectToUnrestrictedPort" />
      <Member Id="F:System.Net.Mail.SmtpAccess.None" />
    </Type>
    <Type Name="System.Net.Mail.SmtpPermission" Id="T:System.Net.Mail.SmtpPermission">
      <Member Id="M:System.Net.Mail.SmtpPermission.#ctor(System.Boolean)" />
      <Member Id="M:System.Net.Mail.SmtpPermission.#ctor(System.Net.Mail.SmtpAccess)" />
      <Member Id="M:System.Net.Mail.SmtpPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <Member Id="M:System.Net.Mail.SmtpPermission.AddPermission(System.Net.Mail.SmtpAccess)" />
      <Member Id="M:System.Net.Mail.SmtpPermission.Copy" />
      <Member Id="M:System.Net.Mail.SmtpPermission.FromXml(System.Security.SecurityElement)" />
      <Member Id="M:System.Net.Mail.SmtpPermission.Intersect(System.Security.IPermission)" />
      <Member Id="M:System.Net.Mail.SmtpPermission.IsSubsetOf(System.Security.IPermission)" />
      <Member Id="M:System.Net.Mail.SmtpPermission.IsUnrestricted" />
      <Member Id="M:System.Net.Mail.SmtpPermission.ToXml" />
      <Member Id="M:System.Net.Mail.SmtpPermission.Union(System.Security.IPermission)" />
      <Member Id="P:System.Net.Mail.SmtpPermission.Access" />
    </Type>
    <Type Name="System.Net.Mail.SmtpPermissionAttribute" Id="T:System.Net.Mail.SmtpPermissionAttribute">
      <Member Id="M:System.Net.Mail.SmtpPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <Member Id="M:System.Net.Mail.SmtpPermissionAttribute.CreatePermission" />
      <Member Id="P:System.Net.Mail.SmtpPermissionAttribute.Access" />
    </Type>
  </Namespace>
  <Namespace Name="System.Net.NetworkInformation">
    <Type Name="System.Net.NetworkInformation.NetworkInformationAccess" Id="T:System.Net.NetworkInformation.NetworkInformationAccess">
      <Member Id="F:System.Net.NetworkInformation.NetworkInformationAccess.None" />
      <Member Id="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" />
      <Member Id="F:System.Net.NetworkInformation.NetworkInformationAccess.Read" />
    </Type>
    <Type Name="System.Net.NetworkInformation.NetworkInformationPermission" Id="T:System.Net.NetworkInformation.NetworkInformationPermission">
      <Member Id="M:System.Net.NetworkInformation.NetworkInformationPermission.#ctor(System.Net.NetworkInformation.NetworkInformationAccess)" />
      <Member Id="M:System.Net.NetworkInformation.NetworkInformationPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <Member Id="M:System.Net.NetworkInformation.NetworkInformationPermission.AddPermission(System.Net.NetworkInformation.NetworkInformationAccess)" />
      <Member Id="M:System.Net.NetworkInformation.NetworkInformationPermission.Copy" />
      <Member Id="M:System.Net.NetworkInformation.NetworkInformationPermission.FromXml(System.Security.SecurityElement)" />
      <Member Id="M:System.Net.NetworkInformation.NetworkInformationPermission.Intersect(System.Security.IPermission)" />
      <Member Id="M:System.Net.NetworkInformation.NetworkInformationPermission.IsSubsetOf(System.Security.IPermission)" />
      <Member Id="M:System.Net.NetworkInformation.NetworkInformationPermission.IsUnrestricted" />
      <Member Id="M:System.Net.NetworkInformation.NetworkInformationPermission.ToXml" />
      <Member Id="M:System.Net.NetworkInformation.NetworkInformationPermission.Union(System.Security.IPermission)" />
      <Member Id="P:System.Net.NetworkInformation.NetworkInformationPermission.Access" />
    </Type>
    <Type Name="System.Net.NetworkInformation.NetworkInformationPermissionAttribute" Id="T:System.Net.NetworkInformation.NetworkInformationPermissionAttribute">
      <Member Id="M:System.Net.NetworkInformation.NetworkInformationPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <Member Id="M:System.Net.NetworkInformation.NetworkInformationPermissionAttribute.CreatePermission" />
      <Member Id="P:System.Net.NetworkInformation.NetworkInformationPermissionAttribute.Access" />
    </Type>
  </Namespace>
  <Namespace Name="System.Net.PeerToPeer.Collaboration">
    <Type Name="System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" Id="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission">
      <Member Id="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <Member Id="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Copy" />
      <Member Id="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.FromXml(System.Security.SecurityElement)" />
      <Member Id="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect(System.Security.IPermission)" />
      <Member Id="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsSubsetOf(System.Security.IPermission)" />
      <Member Id="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsUnrestricted" />
      <Member Id="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.ToXml" />
      <Member Id="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)" />
    </Type>
    <Type Name="System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute" Id="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute">
      <Member Id="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <Member Id="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute.CreatePermission" />
    </Type>
  </Namespace>
  <Namespace Name="System.Net.PeerToPeer">
    <Type Name="System.Net.PeerToPeer.PnrpPermission" Id="T:System.Net.PeerToPeer.PnrpPermission">
      <Member Id="M:System.Net.PeerToPeer.PnrpPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <Member Id="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
      <Member Id="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
      <Member Id="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />
      <Member Id="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)" />
      <Member Id="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
      <Member Id="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
      <Member Id="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
    </Type>
    <Type Name="System.Net.PeerToPeer.PnrpPermissionAttribute" Id="T:System.Net.PeerToPeer.PnrpPermissionAttribute">
      <Member Id="M:System.Net.PeerToPeer.PnrpPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <Member Id="M:System.Net.PeerToPeer.PnrpPermissionAttribute.CreatePermission" />
    </Type>
    <Type Name="System.Net.PeerToPeer.PnrpScope" Id="T:System.Net.PeerToPeer.PnrpScope">
      <Member Id="F:System.Net.PeerToPeer.PnrpScope.All" />
      <Member Id="F:System.Net.PeerToPeer.PnrpScope.Global" />
      <Member Id="F:System.Net.PeerToPeer.PnrpScope.LinkLocal" />
      <Member Id="F:System.Net.PeerToPeer.PnrpScope.SiteLocal" />
    </Type>
  </Namespace>
  <Namespace Name="System.Security">
    <Type Name="System.Security.CodeAccessPermission" Id="T:System.Security.CodeAccessPermission">
      <Member Id="M:System.Security.CodeAccessPermission.#ctor" />
      <Member Id="M:System.Security.CodeAccessPermission.Assert" />
      <Member Id="M:System.Security.CodeAccessPermission.Copy" />
      <Member Id="M:System.Security.CodeAccessPermission.Demand" />
      <Member Id="M:System.Security.CodeAccessPermission.Deny" />
      <Member Id="M:System.Security.CodeAccessPermission.Equals(System.Object)" />
      <Member Id="M:System.Security.CodeAccessPermission.FromXml(System.Security.SecurityElement)" />
      <Member Id="M:System.Security.CodeAccessPermission.GetHashCode" />
      <Member Id="M:System.Security.CodeAccessPermission.Intersect(System.Security.IPermission)" />
      <Member Id="M:System.Security.CodeAccessPermission.IsSubsetOf(System.Security.IPermission)" />
      <Member Id="M:System.Security.CodeAccessPermission.PermitOnly" />
      <Member Id="M:System.Security.CodeAccessPermission.RevertAll" />
      <Member Id="M:System.Security.CodeAccessPermission.RevertAssert" />
      <Member Id="M:System.Security.CodeAccessPermission.RevertDeny" />
      <Member Id="M:System.Security.CodeAccessPermission.RevertPermitOnly" />
      <Member Id="M:System.Security.CodeAccessPermission.ToString" />
      <Member Id="M:System.Security.CodeAccessPermission.ToXml" />
      <Member Id="M:System.Security.CodeAccessPermission.Union(System.Security.IPermission)" />
    </Type>
    <Type Name="System.Security.HostProtectionException" Id="T:System.Security.HostProtectionException">
      <Member Id="M:System.Security.HostProtectionException.#ctor" />
      <Member Id="M:System.Security.HostProtectionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="M:System.Security.HostProtectionException.#ctor(System.String)" />
      <Member Id="M:System.Security.HostProtectionException.#ctor(System.String,System.Exception)" />
      <Member Id="M:System.Security.HostProtectionException.#ctor(System.String,System.Security.Permissions.HostProtectionResource,System.Security.Permissions.HostProtectionResource)" />
      <Member Id="M:System.Security.HostProtectionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="M:System.Security.HostProtectionException.ToString" />
      <Member Id="P:System.Security.HostProtectionException.DemandedResources" />
      <Member Id="P:System.Security.HostProtectionException.ProtectedResources" />
    </Type>
    <Type Name="System.Security.HostSecurityManager" Id="T:System.Security.HostSecurityManager">
      <Member Id="M:System.Security.HostSecurityManager.#ctor" />
      <Member Id="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)" />
      <Member Id="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)" />
      <Member Id="M:System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)" />
      <Member Id="M:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes" />
      <Member Id="M:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)" />
      <Member Id="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)" />
      <Member Id="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)" />
      <Member Id="M:System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)" />
      <Member Id="P:System.Security.HostSecurityManager.DomainPolicy" />
      <Member Id="P:System.Security.HostSecurityManager.Flags" />
    </Type>
    <Type Name="System.Security.HostSecurityManagerOptions" Id="T:System.Security.HostSecurityManagerOptions">
      <Member Id="F:System.Security.HostSecurityManagerOptions.AllFlags" />
      <Member Id="F:System.Security.HostSecurityManagerOptions.HostAppDomainEvidence" />
      <Member Id="F:System.Security.HostSecurityManagerOptions.HostAssemblyEvidence" />
      <Member Id="F:System.Security.HostSecurityManagerOptions.HostDetermineApplicationTrust" />
      <Member Id="F:System.Security.HostSecurityManagerOptions.HostPolicyLevel" />
      <Member Id="F:System.Security.HostSecurityManagerOptions.HostResolvePolicy" />
      <Member Id="F:System.Security.HostSecurityManagerOptions.None" />
    </Type>
    <Type Name="System.Security.IEvidenceFactory" Id="T:System.Security.IEvidenceFactory">
      <Member Id="P:System.Security.IEvidenceFactory.Evidence" />
    </Type>
    <Type Name="System.Security.ISecurityPolicyEncodable" Id="T:System.Security.ISecurityPolicyEncodable">
      <Member Id="M:System.Security.ISecurityPolicyEncodable.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" />
      <Member Id="M:System.Security.ISecurityPolicyEncodable.ToXml(System.Security.Policy.PolicyLevel)" />
    </Type>
    <Type Name="System.Security.NamedPermissionSet" Id="T:System.Security.NamedPermissionSet">
      <Member Id="M:System.Security.NamedPermissionSet.#ctor(System.Security.NamedPermissionSet)" />
      <Member Id="M:System.Security.NamedPermissionSet.#ctor(System.String)" />
      <Member Id="M:System.Security.NamedPermissionSet.#ctor(System.String,System.Security.Permissions.PermissionState)" />
      <Member Id="M:System.Security.NamedPermissionSet.#ctor(System.String,System.Security.PermissionSet)" />
      <Member Id="M:System.Security.NamedPermissionSet.Copy" />
      <Member Id="M:System.Security.NamedPermissionSet.Copy(System.String)" />
      <Member Id="M:System.Security.NamedPermissionSet.Equals(System.Object)" />
      <Member Id="M:System.Security.NamedPermissionSet.FromXml(System.Security.SecurityElement)" />
      <Member Id="M:System.Security.NamedPermissionSet.GetHashCode" />
      <Member Id="M:System.Security.NamedPermissionSet.ToXml" />
      <Member Id="P:System.Security.NamedPermissionSet.Description" />
      <Member Id="P:System.Security.NamedPermissionSet.Name" />
    </Type>
    <Type Name="System.Security.PolicyLevelType" Id="T:System.Security.PolicyLevelType">
      <Member Id="F:System.Security.PolicyLevelType.AppDomain" />
      <Member Id="F:System.Security.PolicyLevelType.Enterprise" />
      <Member Id="F:System.Security.PolicyLevelType.Machine" />
      <Member Id="F:System.Security.PolicyLevelType.User" />
    </Type>
    <Type Name="System.Security.SecurityContext" Id="T:System.Security.SecurityContext">
      <Member Id="M:System.Security.SecurityContext.Capture" />
      <Member Id="M:System.Security.SecurityContext.CreateCopy" />
      <Member Id="M:System.Security.SecurityContext.Dispose" />
      <Member Id="M:System.Security.SecurityContext.IsFlowSuppressed" />
      <Member Id="M:System.Security.SecurityContext.IsWindowsIdentityFlowSuppressed" />
      <Member Id="M:System.Security.SecurityContext.RestoreFlow" />
      <Member Id="M:System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)" />
      <Member Id="M:System.Security.SecurityContext.SuppressFlow" />
      <Member Id="M:System.Security.SecurityContext.SuppressFlowWindowsIdentity" />
    </Type>
    <Type Name="System.Security.SecurityContextSource" Id="T:System.Security.SecurityContextSource">
      <Member Id="F:System.Security.SecurityContextSource.CurrentAppDomain" />
      <Member Id="F:System.Security.SecurityContextSource.CurrentAssembly" />
    </Type>
    <Type Name="System.Security.SecurityManager" Id="T:System.Security.SecurityManager">
      <Member Id="M:System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture" />
      <Member Id="M:System.Security.SecurityManager.GetStandardSandbox(System.Security.Policy.Evidence)" />
      <Member Id="M:System.Security.SecurityManager.GetZoneAndOrigin(System.Collections.ArrayList@,System.Collections.ArrayList@)" />
      <Member Id="M:System.Security.SecurityManager.IsGranted(System.Security.IPermission)" />
      <Member Id="M:System.Security.SecurityManager.LoadPolicyLevelFromFile(System.String,System.Security.PolicyLevelType)" />
      <Member Id="M:System.Security.SecurityManager.LoadPolicyLevelFromString(System.String,System.Security.PolicyLevelType)" />
      <Member Id="M:System.Security.SecurityManager.PolicyHierarchy" />
      <Member Id="M:System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence)" />
      <Member Id="M:System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet@)" />
      <Member Id="M:System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence[])" />
      <Member Id="M:System.Security.SecurityManager.ResolvePolicyGroups(System.Security.Policy.Evidence)" />
      <Member Id="M:System.Security.SecurityManager.ResolveSystemPolicy(System.Security.Policy.Evidence)" />
      <Member Id="M:System.Security.SecurityManager.SavePolicy" />
      <Member Id="M:System.Security.SecurityManager.SavePolicyLevel(System.Security.Policy.PolicyLevel)" />
      <Member Id="P:System.Security.SecurityManager.CheckExecutionRights" />
      <Member Id="P:System.Security.SecurityManager.SecurityEnabled" />
    </Type>
    <Type Name="System.Security.SecurityState" Id="T:System.Security.SecurityState">
      <Member Id="M:System.Security.SecurityState.#ctor" />
      <Member Id="M:System.Security.SecurityState.EnsureState" />
      <Member Id="M:System.Security.SecurityState.IsStateAvailable" />
    </Type>
    <Type Name="System.Security.SecurityZone" Id="T:System.Security.SecurityZone">
      <Member Id="F:System.Security.SecurityZone.Internet" />
      <Member Id="F:System.Security.SecurityZone.Intranet" />
      <Member Id="F:System.Security.SecurityZone.MyComputer" />
      <Member Id="F:System.Security.SecurityZone.NoZone" />
      <Member Id="F:System.Security.SecurityZone.Trusted" />
      <Member Id="F:System.Security.SecurityZone.Untrusted" />
    </Type>
    <Type Name="System.Security.XmlSyntaxException" Id="T:System.Security.XmlSyntaxException">
      <Member Id="M:System.Security.XmlSyntaxException.#ctor" />
      <Member Id="M:System.Security.XmlSyntaxException.#ctor(System.Int32)" />
      <Member Id="M:System.Security.XmlSyntaxException.#ctor(System.Int32,System.String)" />
      <Member Id="M:System.Security.XmlSyntaxException.#ctor(System.String)" />
      <Member Id="M:System.Security.XmlSyntaxException.#ctor(System.String,System.Exception)" />
    </Type>
  </Namespace>
  <Namespace Name="System.Security.Permissions">
    <Type Name="System.Security.Permissions.DataProtectionPermission" Id="T:System.Security.Permissions.DataProtectionPermission">
      <Member Id="M:System.Security.Permissions.DataProtectionPermission.#ctor(System.Security.Permissions.DataProtectionPermissionFlags)" />
      <Member Id="M:System.Security.Permissions.DataProtectionPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <Member Id="M:System.Security.Permissions.DataProtectionPermission.Copy" />
      <Member Id="M:System.Security.Permissions.DataProtectionPermission.FromXml(System.Security.SecurityElement)" />
      <Member Id="M:System.Security.Permissions.DataProtectionPermission.Intersect(System.Security.IPermission)" />
      <Member Id="M:System.Security.Permissions.DataProtectionPermission.IsSubsetOf(System.Security.IPermission)" />
      <Member Id="M:System.Security.Permissions.DataProtectionPermission.IsUnrestricted" />
      <Member Id="M:System.Security.Permissions.DataProtectionPermission.ToXml" />
      <Member Id="M:System.Security.Permissions.DataProtectionPermission.Union(System.Security.IPermission)" />
      <Member Id="P:System.Security.Permissions.DataProtectionPermission.Flags" />
    </Type>
    <Type Name="System.Security.Permissions.DataProtectionPermissionAttribute" Id="T:System.Security.Permissions.DataProtectionPermissionAttribute">
      <Member Id="M:System.Security.Permissions.DataProtectionPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <Member Id="M:System.Security.Permissions.DataProtectionPermissionAttribute.CreatePermission" />
      <Member Id="P:System.Security.Permissions.DataProtectionPermissionAttribute.Flags" />
      <Member Id="P:System.Security.Permissions.DataProtectionPermissionAttribute.ProtectData" />
      <Member Id="P:System.Security.Permissions.DataProtectionPermissionAttribute.ProtectMemory" />
      <Member Id="P:System.Security.Permissions.DataProtectionPermissionAttribute.UnprotectData" />
      <Member Id="P:System.Security.Permissions.DataProtectionPermissionAttribute.UnprotectMemory" />
    </Type>
    <Type Name="System.Security.Permissions.DataProtectionPermissionFlags" Id="T:System.Security.Permissions.DataProtectionPermissionFlags">
      <Member Id="F:System.Security.Permissions.DataProtectionPermissionFlags.AllFlags" />
      <Member Id="F:System.Security.Permissions.DataProtectionPermissionFlags.NoFlags" />
      <Member Id="F:System.Security.Permissions.DataProtectionPermissionFlags.ProtectData" />
      <Member Id="F:System.Security.Permissions.DataProtectionPermissionFlags.ProtectMemory" />
      <Member Id="F:System.Security.Permissions.DataProtectionPermissionFlags.UnprotectData" />
      <Member Id="F:System.Security.Permissions.DataProtectionPermissionFlags.UnprotectMemory" />
    </Type>
    <Type Name="System.Security.Permissions.EnvironmentPermission" Id="T:System.Security.Permissions.EnvironmentPermission">
      <Member Id="M:System.Security.Permissions.EnvironmentPermission.#ctor(System.Security.Permissions.EnvironmentPermissionAccess,System.String)" />
      <Member Id="M:System.Security.Permissions.EnvironmentPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <Member Id="M:System.Security.Permissions.EnvironmentPermission.AddPathList(System.Security.Permissions.EnvironmentPermissionAccess,System.String)" />
      <Member Id="M:System.Security.Permissions.EnvironmentPermission.Copy" />
      <Member Id="M:System.Security.Permissions.EnvironmentPermission.FromXml(System.Security.SecurityElement)" />
      <Member Id="M:System.Security.Permissions.EnvironmentPermission.GetPathList(System.Security.Permissions.EnvironmentPermissionAccess)" />
      <Member Id="M:System.Security.Permissions.EnvironmentPermission.Intersect(System.Security.IPermission)" />
      <Member Id="M:System.Security.Permissions.EnvironmentPermission.IsSubsetOf(System.Security.IPermission)" />
      <Member Id="M:System.Security.Permissions.EnvironmentPermission.IsUnrestricted" />
      <Member Id="M:System.Security.Permissions.EnvironmentPermission.SetPathList(System.Security.Permissions.EnvironmentPermissionAccess,System.String)" />
      <Member Id="M:System.Security.Permissions.EnvironmentPermission.ToXml" />
      <Member Id="M:System.Security.Permissions.EnvironmentPermission.Union(System.Security.IPermission)" />
    </Type>
    <Type Name="System.Security.Permissions.EnvironmentPermissionAccess" Id="T:System.Security.Permissions.EnvironmentPermissionAccess">
      <Member Id="F:System.Security.Permissions.EnvironmentPermissionAccess.AllAccess" />
      <Member Id="F:System.Security.Permissions.EnvironmentPermissionAccess.NoAccess" />
      <Member Id="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" />
      <Member Id="F:System.Security.Permissions.EnvironmentPermissionAccess.Write" />
    </Type>
    <Type Name="System.Security.Permissions.EnvironmentPermissionAttribute" Id="T:System.Security.Permissions.EnvironmentPermissionAttribute">
      <Member Id="M:System.Security.Permissions.EnvironmentPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <Member Id="M:System.Security.Permissions.EnvironmentPermissionAttribute.CreatePermission" />
      <Member Id="P:System.Security.Permissions.EnvironmentPermissionAttribute.All" />
      <Member Id="P:System.Security.Permissions.EnvironmentPermissionAttribute.Read" />
      <Member Id="P:System.Security.Permissions.EnvironmentPermissionAttribute.Write" />
    </Type>
    <Type Name="System.Security.Permissions.FileDialogPermission" Id="T:System.Security.Permissions.FileDialogPermission">
      <Member Id="M:System.Security.Permissions.FileDialogPermission.#ctor(System.Security.Permissions.FileDialogPermissionAccess)" />
      <Member Id="M:System.Security.Permissions.FileDialogPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <Member Id="M:System.Security.Permissions.FileDialogPermission.Copy" />
      <Member Id="M:System.Security.Permissions.FileDialogPermission.FromXml(System.Security.SecurityElement)" />
      <Member Id="M:System.Security.Permissions.FileDialogPermission.Intersect(System.Security.IPermission)" />
      <Member Id="M:System.Security.Permissions.FileDialogPermission.IsSubsetOf(System.Security.IPermission)" />
      <Member Id="M:System.Security.Permissions.FileDialogPermission.IsUnrestricted" />
      <Member Id="M:System.Security.Permissions.FileDialogPermission.ToXml" />
      <Member Id="M:System.Security.Permissions.FileDialogPermission.Union(System.Security.IPermission)" />
      <Member Id="P:System.Security.Permissions.FileDialogPermission.Access" />
    </Type>
    <Type Name="System.Security.Permissions.FileDialogPermissionAccess" Id="T:System.Security.Permissions.FileDialogPermissionAccess">
      <Member Id="F:System.Security.Permissions.FileDialogPermissionAccess.None" />
      <Member Id="F:System.Security.Permissions.FileDialogPermissionAccess.Open" />
      <Member Id="F:System.Security.Permissions.FileDialogPermissionAccess.OpenSave" />
      <Member Id="F:System.Security.Permissions.FileDialogPermissionAccess.Save" />
    </Type>
    <Type Name="System.Security.Permissions.FileDialogPermissionAttribute" Id="T:System.Security.Permissions.FileDialogPermissionAttribute">
      <Member Id="M:System.Security.Permissions.FileDialogPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <Member Id="M:System.Security.Permissions.FileDialogPermissionAttribute.CreatePermission" />
      <Member Id="P:System.Security.Permissions.FileDialogPermissionAttribute.Open" />
      <Member Id="P:System.Security.Permissions.FileDialogPermissionAttribute.Save" />
    </Type>
    <Type Name="System.Security.Permissions.FileIOPermission" Id="T:System.Security.Permissions.FileIOPermission">
      <Member Id="M:System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)" />
      <Member Id="M:System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String[])" />
      <Member Id="M:System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.String)" />
      <Member Id="M:System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.String[])" />
      <Member Id="M:System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <Member Id="M:System.Security.Permissions.FileIOPermission.AddPathList(System.Security.Permissions.FileIOPermissionAccess,System.String)" />
      <Member Id="M:System.Security.Permissions.FileIOPermission.AddPathList(System.Security.Permissions.FileIOPermissionAccess,System.String[])" />
      <Member Id="M:System.Security.Permissions.FileIOPermission.Copy" />
      <Member Id="M:System.Security.Permissions.FileIOPermission.Equals(System.Object)" />
      <Member Id="M:System.Security.Permissions.FileIOPermission.FromXml(System.Security.SecurityElement)" />
      <Member Id="M:System.Security.Permissions.FileIOPermission.GetHashCode" />
      <Member Id="M:System.Security.Permissions.FileIOPermission.GetPathList(System.Security.Permissions.FileIOPermissionAccess)" />
      <Member Id="M:System.Security.Permissions.FileIOPermission.Intersect(System.Security.IPermission)" />
      <Member Id="M:System.Security.Permissions.FileIOPermission.IsSubsetOf(System.Security.IPermission)" />
      <Member Id="M:System.Security.Permissions.FileIOPermission.IsUnrestricted" />
      <Member Id="M:System.Security.Permissions.FileIOPermission.SetPathList(System.Security.Permissions.FileIOPermissionAccess,System.String)" />
      <Member Id="M:System.Security.Permissions.FileIOPermission.SetPathList(System.Security.Permissions.FileIOPermissionAccess,System.String[])" />
      <Member Id="M:System.Security.Permissions.FileIOPermission.ToXml" />
      <Member Id="M:System.Security.Permissions.FileIOPermission.Union(System.Security.IPermission)" />
      <Member Id="P:System.Security.Permissions.FileIOPermission.AllFiles" />
      <Member Id="P:System.Security.Permissions.FileIOPermission.AllLocalFiles" />
    </Type>
    <Type Name="System.Security.Permissions.FileIOPermissionAccess" Id="T:System.Security.Permissions.FileIOPermissionAccess">
      <Member Id="F:System.Security.Permissions.FileIOPermissionAccess.AllAccess" />
      <Member Id="F:System.Security.Permissions.FileIOPermissionAccess.Append" />
      <Member Id="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />
      <Member Id="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />
      <Member Id="F:System.Security.Permissions.FileIOPermissionAccess.Read" />
      <Member Id="F:System.Security.Permissions.FileIOPermissionAccess.Write" />
    </Type>
    <Type Name="System.Security.Permissions.FileIOPermissionAttribute" Id="T:System.Security.Permissions.FileIOPermissionAttribute">
      <Member Id="M:System.Security.Permissions.FileIOPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <Member Id="M:System.Security.Permissions.FileIOPermissionAttribute.CreatePermission" />
      <Member Id="P:System.Security.Permissions.FileIOPermissionAttribute.All" />
      <Member Id="P:System.Security.Permissions.FileIOPermissionAttribute.AllFiles" />
      <Member Id="P:System.Security.Permissions.FileIOPermissionAttribute.AllLocalFiles" />
      <Member Id="P:System.Security.Permissions.FileIOPermissionAttribute.Append" />
      <Member Id="P:System.Security.Permissions.FileIOPermissionAttribute.ChangeAccessControl" />
      <Member Id="P:System.Security.Permissions.FileIOPermissionAttribute.PathDiscovery" />
      <Member Id="P:System.Security.Permissions.FileIOPermissionAttribute.Read" />
      <Member Id="P:System.Security.Permissions.FileIOPermissionAttribute.ViewAccessControl" />
      <Member Id="P:System.Security.Permissions.FileIOPermissionAttribute.ViewAndModify" />
      <Member Id="P:System.Security.Permissions.FileIOPermissionAttribute.Write" />
    </Type>
    <Type Name="System.Security.Permissions.GacIdentityPermission" Id="T:System.Security.Permissions.GacIdentityPermission">
      <Member Id="M:System.Security.Permissions.GacIdentityPermission.#ctor" />
      <Member Id="M:System.Security.Permissions.GacIdentityPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <Member Id="M:System.Security.Permissions.GacIdentityPermission.Copy" />
      <Member Id="M:System.Security.Permissions.GacIdentityPermission.FromXml(System.Security.SecurityElement)" />
      <Member Id="M:System.Security.Permissions.GacIdentityPermission.Intersect(System.Security.IPermission)" />
      <Member Id="M:System.Security.Permissions.GacIdentityPermission.IsSubsetOf(System.Security.IPermission)" />
      <Member Id="M:System.Security.Permissions.GacIdentityPermission.ToXml" />
      <Member Id="M:System.Security.Permissions.GacIdentityPermission.Union(System.Security.IPermission)" />
    </Type>
    <Type Name="System.Security.Permissions.GacIdentityPermissionAttribute" Id="T:System.Security.Permissions.GacIdentityPermissionAttribute">
      <Member Id="M:System.Security.Permissions.GacIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <Member Id="M:System.Security.Permissions.GacIdentityPermissionAttribute.CreatePermission" />
    </Type>
    <Type Name="System.Security.Permissions.HostProtectionAttribute" Id="T:System.Security.Permissions.HostProtectionAttribute">
      <Member Id="M:System.Security.Permissions.HostProtectionAttribute.#ctor" />
      <Member Id="M:System.Security.Permissions.HostProtectionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <Member Id="M:System.Security.Permissions.HostProtectionAttribute.CreatePermission" />
      <Member Id="P:System.Security.Permissions.HostProtectionAttribute.ExternalProcessMgmt" />
      <Member Id="P:System.Security.Permissions.HostProtectionAttribute.ExternalThreading" />
      <Member Id="P:System.Security.Permissions.HostProtectionAttribute.MayLeakOnAbort" />
      <Member Id="P:System.Security.Permissions.HostProtectionAttribute.Resources" />
      <Member Id="P:System.Security.Permissions.HostProtectionAttribute.SecurityInfrastructure" />
      <Member Id="P:System.Security.Permissions.HostProtectionAttribute.SelfAffectingProcessMgmt" />
      <Member Id="P:System.Security.Permissions.HostProtectionAttribute.SelfAffectingThreading" />
      <Member Id="P:System.Security.Permissions.HostProtectionAttribute.SharedState" />
      <Member Id="P:System.Security.Permissions.HostProtectionAttribute.Synchronization" />
      <Member Id="P:System.Security.Permissions.HostProtectionAttribute.UI" />
    </Type>
    <Type Name="System.Security.Permissions.HostProtectionResource" Id="T:System.Security.Permissions.HostProtectionResource">
      <Member Id="F:System.Security.Permissions.HostProtectionResource.All" />
      <Member Id="F:System.Security.Permissions.HostProtectionResource.ExternalProcessMgmt" />
      <Member Id="F:System.Security.Permissions.HostProtectionResource.ExternalThreading" />
      <Member Id="F:System.Security.Permissions.HostProtectionResource.MayLeakOnAbort" />
      <Member Id="F:System.Security.Permissions.HostProtectionResource.None" />
      <Member Id="F:System.Security.Permissions.HostProtectionResource.SecurityInfrastructure" />
      <Member Id="F:System.Security.Permissions.HostProtectionResource.SelfAffectingProcessMgmt" />
      <Member Id="F:System.Security.Permissions.HostProtectionResource.SelfAffectingThreading" />
      <Member Id="F:System.Security.Permissions.HostProtectionResource.SharedState" />
      <Member Id="F:System.Security.Permissions.HostProtectionResource.Synchronization" />
      <Member Id="F:System.Security.Permissions.HostProtectionResource.UI" />
    </Type>
    <Type Name="System.Security.Permissions.IsolatedStorageContainment" Id="T:System.Security.Permissions.IsolatedStorageContainment">
      <Member Id="F:System.Security.Permissions.IsolatedStorageContainment.AdministerIsolatedStorageByUser" />
      <Member Id="F:System.Security.Permissions.IsolatedStorageContainment.ApplicationIsolationByMachine" />
      <Member Id="F:System.Security.Permissions.IsolatedStorageContainment.ApplicationIsolationByRoamingUser" />
      <Member Id="F:System.Security.Permissions.IsolatedStorageContainment.ApplicationIsolationByUser" />
      <Member Id="F:System.Security.Permissions.IsolatedStorageContainment.AssemblyIsolationByMachine" />
      <Member Id="F:System.Security.Permissions.IsolatedStorageContainment.AssemblyIsolationByRoamingUser" />
      <Member Id="F:System.Security.Permissions.IsolatedStorageContainment.AssemblyIsolationByUser" />
      <Member Id="F:System.Security.Permissions.IsolatedStorageContainment.DomainIsolationByMachine" />
      <Member Id="F:System.Security.Permissions.IsolatedStorageContainment.DomainIsolationByRoamingUser" />
      <Member Id="F:System.Security.Permissions.IsolatedStorageContainment.DomainIsolationByUser" />
      <Member Id="F:System.Security.Permissions.IsolatedStorageContainment.None" />
      <Member Id="F:System.Security.Permissions.IsolatedStorageContainment.UnrestrictedIsolatedStorage" />
    </Type>
    <Type Name="System.Security.Permissions.IsolatedStorageFilePermission" Id="T:System.Security.Permissions.IsolatedStorageFilePermission">
      <Member Id="M:System.Security.Permissions.IsolatedStorageFilePermission.#ctor(System.Security.Permissions.PermissionState)" />
      <Member Id="M:System.Security.Permissions.IsolatedStorageFilePermission.Copy" />
      <Member Id="M:System.Security.Permissions.IsolatedStorageFilePermission.Intersect(System.Security.IPermission)" />
      <Member Id="M:System.Security.Permissions.IsolatedStorageFilePermission.IsSubsetOf(System.Security.IPermission)" />
      <Member Id="M:System.Security.Permissions.IsolatedStorageFilePermission.ToXml" />
      <Member Id="M:System.Security.Permissions.IsolatedStorageFilePermission.Union(System.Security.IPermission)" />
    </Type>
    <Type Name="System.Security.Permissions.IsolatedStorageFilePermissionAttribute" Id="T:System.Security.Permissions.IsolatedStorageFilePermissionAttribute">
      <Member Id="M:System.Security.Permissions.IsolatedStorageFilePermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <Member Id="M:System.Security.Permissions.IsolatedStorageFilePermissionAttribute.CreatePermission" />
    </Type>
    <Type Name="System.Security.Permissions.IsolatedStoragePermission" Id="T:System.Security.Permissions.IsolatedStoragePermission">
      <Member Id="M:System.Security.Permissions.IsolatedStoragePermission.#ctor(System.Security.Permissions.PermissionState)" />
      <Member Id="M:System.Security.Permissions.IsolatedStoragePermission.FromXml(System.Security.SecurityElement)" />
      <Member Id="M:System.Security.Permissions.IsolatedStoragePermission.IsUnrestricted" />
      <Member Id="M:System.Security.Permissions.IsolatedStoragePermission.ToXml" />
      <Member Id="P:System.Security.Permissions.IsolatedStoragePermission.UsageAllowed" />
      <Member Id="P:System.Security.Permissions.IsolatedStoragePermission.UserQuota" />
    </Type>
    <Type Name="System.Security.Permissions.IsolatedStoragePermissionAttribute" Id="T:System.Security.Permissions.IsolatedStoragePermissionAttribute">
      <Member Id="M:System.Security.Permissions.IsolatedStoragePermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <Member Id="P:System.Security.Permissions.IsolatedStoragePermissionAttribute.UsageAllowed" />
      <Member Id="P:System.Security.Permissions.IsolatedStoragePermissionAttribute.UserQuota" />
    </Type>
    <Type Name="System.Security.Permissions.IUnrestrictedPermission" Id="T:System.Security.Permissions.IUnrestrictedPermission">
      <Member Id="M:System.Security.Permissions.IUnrestrictedPermission.IsUnrestricted" />
    </Type>
    <Type Name="System.Security.Permissions.KeyContainerPermission" Id="T:System.Security.Permissions.KeyContainerPermission">
      <Member Id="M:System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags)" />
      <Member Id="M:System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags,System.Security.Permissions.KeyContainerPermissionAccessEntry[])" />
      <Member Id="M:System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <Member Id="M:System.Security.Permissions.KeyContainerPermission.Copy" />
      <Member Id="M:System.Security.Permissions.KeyContainerPermission.FromXml(System.Security.SecurityElement)" />
      <Member Id="M:System.Security.Permissions.KeyContainerPermission.Intersect(System.Security.IPermission)" />
      <Member Id="M:System.Security.Permissions.KeyContainerPermission.IsSubsetOf(System.Security.IPermission)" />
      <Member Id="M:System.Security.Permissions.KeyContainerPermission.IsUnrestricted" />
      <Member Id="M:System.Security.Permissions.KeyContainerPermission.ToXml" />
      <Member Id="M:System.Security.Permissions.KeyContainerPermission.Union(System.Security.IPermission)" />
      <Member Id="P:System.Security.Permissions.KeyContainerPermission.AccessEntries" />
      <Member Id="P:System.Security.Permissions.KeyContainerPermission.Flags" />
    </Type>
    <Type Name="System.Security.Permissions.KeyContainerPermissionAccessEntry" Id="T:System.Security.Permissions.KeyContainerPermissionAccessEntry">
      <Member Id="M:System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.Security.Cryptography.CspParameters,System.Security.Permissions.KeyContainerPermissionFlags)" />
      <Member Id="M:System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.String,System.Security.Permissions.KeyContainerPermissionFlags)" />
      <Member Id="M:System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.String,System.String,System.Int32,System.String,System.Int32,System.Security.Permissions.KeyContainerPermissionFlags)" />
      <Member Id="M:System.Security.Permissions.KeyContainerPermissionAccessEntry.Equals(System.Object)" />
      <Member Id="M:System.Security.Permissions.KeyContainerPermissionAccessEntry.GetHashCode" />
      <Member Id="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.Flags" />
      <Member Id="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerName" />
      <Member Id="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec" />
      <Member Id="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyStore" />
      <Member Id="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderName" />
      <Member Id="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType" />
    </Type>
    <Type Name="System.Security.Permissions.KeyContainerPermissionAccessEntryCollection" Id="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection">
      <Member Id="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.#ctor" />
      <Member Id="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Add(System.Security.Permissions.KeyContainerPermissionAccessEntry)" />
      <Member Id="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Clear" />
      <Member Id="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.CopyTo(System.Array,System.Int32)" />
      <Member Id="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.CopyTo(System.Security.Permissions.KeyContainerPermissionAccessEntry[],System.Int32)" />
      <Member Id="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.GetEnumerator" />
      <Member Id="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IndexOf(System.Security.Permissions.KeyContainerPermissionAccessEntry)" />
      <Member Id="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Remove(System.Security.Permissions.KeyContainerPermissionAccessEntry)" />
      <Member Id="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="P:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Count" />
      <Member Id="P:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IsSynchronized" />
      <Member Id="P:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Item(System.Int32)" />
      <Member Id="P:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.SyncRoot" />
    </Type>
    <Type Name="System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator" Id="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
      <Member Id="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.#ctor" />
      <Member Id="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext" />
      <Member Id="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset" />
      <Member Id="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current" />
      <Member Id="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.System#Collections#IEnumerator#Current" />
    </Type>
    <Type Name="System.Security.Permissions.KeyContainerPermissionAttribute" Id="T:System.Security.Permissions.KeyContainerPermissionAttribute">
      <Member Id="M:System.Security.Permissions.KeyContainerPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <Member Id="M:System.Security.Permissions.KeyContainerPermissionAttribute.CreatePermission" />
      <Member Id="P:System.Security.Permissions.KeyContainerPermissionAttribute.Flags" />
      <Member Id="P:System.Security.Permissions.KeyContainerPermissionAttribute.KeyContainerName" />
      <Member Id="P:System.Security.Permissions.KeyContainerPermissionAttribute.KeySpec" />
      <Member Id="P:System.Security.Permissions.KeyContainerPermissionAttribute.KeyStore" />
      <Member Id="P:System.Security.Permissions.KeyContainerPermissionAttribute.ProviderName" />
      <Member Id="P:System.Security.Permissions.KeyContainerPermissionAttribute.ProviderType" />
    </Type>
    <Type Name="System.Security.Permissions.KeyContainerPermissionFlags" Id="T:System.Security.Permissions.KeyContainerPermissionFlags">
      <Member Id="F:System.Security.Permissions.KeyContainerPermissionFlags.AllFlags" />
      <Member Id="F:System.Security.Permissions.KeyContainerPermissionFlags.ChangeAcl" />
      <Member Id="F:System.Security.Permissions.KeyContainerPermissionFlags.Create" />
      <Member Id="F:System.Security.Permissions.KeyContainerPermissionFlags.Decrypt" />
      <Member Id="F:System.Security.Permissions.KeyContainerPermissionFlags.Delete" />
      <Member Id="F:System.Security.Permissions.KeyContainerPermissionFlags.Export" />
      <Member Id="F:System.Security.Permissions.KeyContainerPermissionFlags.Import" />
      <Member Id="F:System.Security.Permissions.KeyContainerPermissionFlags.NoFlags" />
      <Member Id="F:System.Security.Permissions.KeyContainerPermissionFlags.Open" />
      <Member Id="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" />
      <Member Id="F:System.Security.Permissions.KeyContainerPermissionFlags.ViewAcl" />
    </Type>
    <Type Name="System.Security.Permissions.MediaPermission" Id="T:System.Security.Permissions.MediaPermission">
      <Member Id="M:System.Security.Permissions.MediaPermission.#ctor" />
      <Member Id="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionAudio)" />
      <Member Id="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionAudio,System.Security.Permissions.MediaPermissionVideo,System.Security.Permissions.MediaPermissionImage)" />
      <Member Id="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionImage)" />
      <Member Id="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionVideo)" />
      <Member Id="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <Member Id="M:System.Security.Permissions.MediaPermission.Copy" />
      <Member Id="M:System.Security.Permissions.MediaPermission.FromXml(System.Security.SecurityElement)" />
      <Member Id="M:System.Security.Permissions.MediaPermission.Intersect(System.Security.IPermission)" />
      <Member Id="M:System.Security.Permissions.MediaPermission.IsSubsetOf(System.Security.IPermission)" />
      <Member Id="M:System.Security.Permissions.MediaPermission.IsUnrestricted" />
      <Member Id="M:System.Security.Permissions.MediaPermission.ToXml" />
      <Member Id="M:System.Security.Permissions.MediaPermission.Union(System.Security.IPermission)" />
      <Member Id="P:System.Security.Permissions.MediaPermission.Audio" />
      <Member Id="P:System.Security.Permissions.MediaPermission.Image" />
      <Member Id="P:System.Security.Permissions.MediaPermission.Video" />
    </Type>
    <Type Name="System.Security.Permissions.MediaPermissionAttribute" Id="T:System.Security.Permissions.MediaPermissionAttribute">
      <Member Id="M:System.Security.Permissions.MediaPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <Member Id="M:System.Security.Permissions.MediaPermissionAttribute.CreatePermission" />
      <Member Id="P:System.Security.Permissions.MediaPermissionAttribute.Audio" />
      <Member Id="P:System.Security.Permissions.MediaPermissionAttribute.Image" />
      <Member Id="P:System.Security.Permissions.MediaPermissionAttribute.Video" />
    </Type>
    <Type Name="System.Security.Permissions.MediaPermissionAudio" Id="T:System.Security.Permissions.MediaPermissionAudio">
      <Member Id="F:System.Security.Permissions.MediaPermissionAudio.AllAudio" />
      <Member Id="F:System.Security.Permissions.MediaPermissionAudio.NoAudio" />
      <Member Id="F:System.Security.Permissions.MediaPermissionAudio.SafeAudio" />
      <Member Id="F:System.Security.Permissions.MediaPermissionAudio.SiteOfOriginAudio" />
    </Type>
    <Type Name="System.Security.Permissions.MediaPermissionImage" Id="T:System.Security.Permissions.MediaPermissionImage">
      <Member Id="F:System.Security.Permissions.MediaPermissionImage.AllImage" />
      <Member Id="F:System.Security.Permissions.MediaPermissionImage.NoImage" />
      <Member Id="F:System.Security.Permissions.MediaPermissionImage.SafeImage" />
      <Member Id="F:System.Security.Permissions.MediaPermissionImage.SiteOfOriginImage" />
    </Type>
    <Type Name="System.Security.Permissions.MediaPermissionVideo" Id="T:System.Security.Permissions.MediaPermissionVideo">
      <Member Id="F:System.Security.Permissions.MediaPermissionVideo.AllVideo" />
      <Member Id="F:System.Security.Permissions.MediaPermissionVideo.NoVideo" />
      <Member Id="F:System.Security.Permissions.MediaPermissionVideo.SafeVideo" />
      <Member Id="F:System.Security.Permissions.MediaPermissionVideo.SiteOfOriginVideo" />
    </Type>
    <Type Name="System.Security.Permissions.PermissionSetAttribute" Id="T:System.Security.Permissions.PermissionSetAttribute">
      <Member Id="M:System.Security.Permissions.PermissionSetAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <Member Id="M:System.Security.Permissions.PermissionSetAttribute.CreatePermission" />
      <Member Id="M:System.Security.Permissions.PermissionSetAttribute.CreatePermissionSet" />
      <Member Id="P:System.Security.Permissions.PermissionSetAttribute.File" />
      <Member Id="P:System.Security.Permissions.PermissionSetAttribute.Hex" />
      <Member Id="P:System.Security.Permissions.PermissionSetAttribute.Name" />
      <Member Id="P:System.Security.Permissions.PermissionSetAttribute.UnicodeEncoded" />
      <Member Id="P:System.Security.Permissions.PermissionSetAttribute.XML" />
    </Type>
    <Type Name="System.Security.Permissions.PrincipalPermission" Id="T:System.Security.Permissions.PrincipalPermission">
      <Member Id="M:System.Security.Permissions.PrincipalPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <Member Id="M:System.Security.Permissions.PrincipalPermission.#ctor(System.String,System.String)" />
      <Member Id="M:System.Security.Permissions.PrincipalPermission.#ctor(System.String,System.String,System.Boolean)" />
      <Member Id="M:System.Security.Permissions.PrincipalPermission.Copy" />
      <Member Id="M:System.Security.Permissions.PrincipalPermission.Demand" />
      <Member Id="M:System.Security.Permissions.PrincipalPermission.Equals(System.Object)" />
      <Member Id="M:System.Security.Permissions.PrincipalPermission.FromXml(System.Security.SecurityElement)" />
      <Member Id="M:System.Security.Permissions.PrincipalPermission.GetHashCode" />
      <Member Id="M:System.Security.Permissions.PrincipalPermission.Intersect(System.Security.IPermission)" />
      <Member Id="M:System.Security.Permissions.PrincipalPermission.IsSubsetOf(System.Security.IPermission)" />
      <Member Id="M:System.Security.Permissions.PrincipalPermission.IsUnrestricted" />
      <Member Id="M:System.Security.Permissions.PrincipalPermission.ToString" />
      <Member Id="M:System.Security.Permissions.PrincipalPermission.ToXml" />
      <Member Id="M:System.Security.Permissions.PrincipalPermission.Union(System.Security.IPermission)" />
    </Type>
    <Type Name="System.Security.Permissions.PrincipalPermissionAttribute" Id="T:System.Security.Permissions.PrincipalPermissionAttribute">
      <Member Id="M:System.Security.Permissions.PrincipalPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <Member Id="M:System.Security.Permissions.PrincipalPermissionAttribute.CreatePermission" />
      <Member Id="P:System.Security.Permissions.PrincipalPermissionAttribute.Authenticated" />
      <Member Id="P:System.Security.Permissions.PrincipalPermissionAttribute.Name" />
      <Member Id="P:System.Security.Permissions.PrincipalPermissionAttribute.Role" />
    </Type>
    <Type Name="System.Security.Permissions.PublisherIdentityPermission" Id="T:System.Security.Permissions.PublisherIdentityPermission">
      <Member Id="M:System.Security.Permissions.PublisherIdentityPermission.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)" />
      <Member Id="M:System.Security.Permissions.PublisherIdentityPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <Member Id="M:System.Security.Permissions.PublisherIdentityPermission.Copy" />
      <Member Id="M:System.Security.Permissions.PublisherIdentityPermission.FromXml(System.Security.SecurityElement)" />
      <Member Id="M:System.Security.Permissions.PublisherIdentityPermission.Intersect(System.Security.IPermission)" />
      <Member Id="M:System.Security.Permissions.PublisherIdentityPermission.IsSubsetOf(System.Security.IPermission)" />
      <Member Id="M:System.Security.Permissions.PublisherIdentityPermission.ToXml" />
      <Member Id="M:System.Security.Permissions.PublisherIdentityPermission.Union(System.Security.IPermission)" />
      <Member Id="P:System.Security.Permissions.PublisherIdentityPermission.Certificate" />
    </Type>
    <Type Name="System.Security.Permissions.PublisherIdentityPermissionAttribute" Id="T:System.Security.Permissions.PublisherIdentityPermissionAttribute">
      <Member Id="M:System.Security.Permissions.PublisherIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <Member Id="M:System.Security.Permissions.PublisherIdentityPermissionAttribute.CreatePermission" />
      <Member Id="P:System.Security.Permissions.PublisherIdentityPermissionAttribute.CertFile" />
      <Member Id="P:System.Security.Permissions.PublisherIdentityPermissionAttribute.SignedFile" />
      <Member Id="P:System.Security.Permissions.PublisherIdentityPermissionAttribute.X509Certificate" />
    </Type>
    <Type Name="System.Security.Permissions.ReflectionPermission" Id="T:System.Security.Permissions.ReflectionPermission">
      <Member Id="M:System.Security.Permissions.ReflectionPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <Member Id="M:System.Security.Permissions.ReflectionPermission.#ctor(System.Security.Permissions.ReflectionPermissionFlag)" />
      <Member Id="M:System.Security.Permissions.ReflectionPermission.Copy" />
      <Member Id="M:System.Security.Permissions.ReflectionPermission.FromXml(System.Security.SecurityElement)" />
      <Member Id="M:System.Security.Permissions.ReflectionPermission.Intersect(System.Security.IPermission)" />
      <Member Id="M:System.Security.Permissions.ReflectionPermission.IsSubsetOf(System.Security.IPermission)" />
      <Member Id="M:System.Security.Permissions.ReflectionPermission.IsUnrestricted" />
      <Member Id="M:System.Security.Permissions.ReflectionPermission.ToXml" />
      <Member Id="M:System.Security.Permissions.ReflectionPermission.Union(System.Security.IPermission)" />
      <Member Id="P:System.Security.Permissions.ReflectionPermission.Flags" />
    </Type>
    <Type Name="System.Security.Permissions.ReflectionPermissionAttribute" Id="T:System.Security.Permissions.ReflectionPermissionAttribute">
      <Member Id="M:System.Security.Permissions.ReflectionPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <Member Id="M:System.Security.Permissions.ReflectionPermissionAttribute.CreatePermission" />
      <Member Id="P:System.Security.Permissions.ReflectionPermissionAttribute.Flags" />
      <Member Id="P:System.Security.Permissions.ReflectionPermissionAttribute.MemberAccess" />
      <Member Id="P:System.Security.Permissions.ReflectionPermissionAttribute.ReflectionEmit" />
      <Member Id="P:System.Security.Permissions.ReflectionPermissionAttribute.RestrictedMemberAccess" />
      <Member Id="P:System.Security.Permissions.ReflectionPermissionAttribute.TypeInformation" />
    </Type>
    <Type Name="System.Security.Permissions.ReflectionPermissionFlag" Id="T:System.Security.Permissions.ReflectionPermissionFlag">
      <Member Id="F:System.Security.Permissions.ReflectionPermissionFlag.AllFlags" />
      <Member Id="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />
      <Member Id="F:System.Security.Permissions.ReflectionPermissionFlag.NoFlags" />
      <Member Id="F:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit" />
      <Member Id="F:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess" />
      <Member Id="F:System.Security.Permissions.ReflectionPermissionFlag.TypeInformation" />
    </Type>
    <Type Name="System.Security.Permissions.RegistryPermission" Id="T:System.Security.Permissions.RegistryPermission">
      <Member Id="M:System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <Member Id="M:System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.RegistryPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)" />
      <Member Id="M:System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.RegistryPermissionAccess,System.String)" />
      <Member Id="M:System.Security.Permissions.RegistryPermission.AddPathList(System.Security.Permissions.RegistryPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)" />
      <Member Id="M:System.Security.Permissions.RegistryPermission.AddPathList(System.Security.Permissions.RegistryPermissionAccess,System.String)" />
      <Member Id="M:System.Security.Permissions.RegistryPermission.Copy" />
      <Member Id="M:System.Security.Permissions.RegistryPermission.FromXml(System.Security.SecurityElement)" />
      <Member Id="M:System.Security.Permissions.RegistryPermission.GetPathList(System.Security.Permissions.RegistryPermissionAccess)" />
      <Member Id="M:System.Security.Permissions.RegistryPermission.Intersect(System.Security.IPermission)" />
      <Member Id="M:System.Security.Permissions.RegistryPermission.IsSubsetOf(System.Security.IPermission)" />
      <Member Id="M:System.Security.Permissions.RegistryPermission.IsUnrestricted" />
      <Member Id="M:System.Security.Permissions.RegistryPermission.SetPathList(System.Security.Permissions.RegistryPermissionAccess,System.String)" />
      <Member Id="M:System.Security.Permissions.RegistryPermission.ToXml" />
      <Member Id="M:System.Security.Permissions.RegistryPermission.Union(System.Security.IPermission)" />
    </Type>
    <Type Name="System.Security.Permissions.RegistryPermissionAccess" Id="T:System.Security.Permissions.RegistryPermissionAccess">
      <Member Id="F:System.Security.Permissions.RegistryPermissionAccess.AllAccess" />
      <Member Id="F:System.Security.Permissions.RegistryPermissionAccess.Create" />
      <Member Id="F:System.Security.Permissions.RegistryPermissionAccess.NoAccess" />
      <Member Id="F:System.Security.Permissions.RegistryPermissionAccess.Read" />
      <Member Id="F:System.Security.Permissions.RegistryPermissionAccess.Write" />
    </Type>
    <Type Name="System.Security.Permissions.RegistryPermissionAttribute" Id="T:System.Security.Permissions.RegistryPermissionAttribute">
      <Member Id="M:System.Security.Permissions.RegistryPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <Member Id="M:System.Security.Permissions.RegistryPermissionAttribute.CreatePermission" />
      <Member Id="P:System.Security.Permissions.RegistryPermissionAttribute.All" />
      <Member Id="P:System.Security.Permissions.RegistryPermissionAttribute.ChangeAccessControl" />
      <Member Id="P:System.Security.Permissions.RegistryPermissionAttribute.Create" />
      <Member Id="P:System.Security.Permissions.RegistryPermissionAttribute.Read" />
      <Member Id="P:System.Security.Permissions.RegistryPermissionAttribute.ViewAccessControl" />
      <Member Id="P:System.Security.Permissions.RegistryPermissionAttribute.ViewAndModify" />
      <Member Id="P:System.Security.Permissions.RegistryPermissionAttribute.Write" />
    </Type>
    <Type Name="System.Security.Permissions.ResourcePermissionBase" Id="T:System.Security.Permissions.ResourcePermissionBase">
      <Member Id="F:System.Security.Permissions.ResourcePermissionBase.Any" />
      <Member Id="F:System.Security.Permissions.ResourcePermissionBase.Local" />
      <Member Id="M:System.Security.Permissions.ResourcePermissionBase.#ctor" />
      <Member Id="M:System.Security.Permissions.ResourcePermissionBase.#ctor(System.Security.Permissions.PermissionState)" />
      <Member Id="M:System.Security.Permissions.ResourcePermissionBase.AddPermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)" />
      <Member Id="M:System.Security.Permissions.ResourcePermissionBase.Clear" />
      <Member Id="M:System.Security.Permissions.ResourcePermissionBase.Copy" />
      <Member Id="M:System.Security.Permissions.ResourcePermissionBase.FromXml(System.Security.SecurityElement)" />
      <Member Id="M:System.Security.Permissions.ResourcePermissionBase.GetPermissionEntries" />
      <Member Id="M:System.Security.Permissions.ResourcePermissionBase.Intersect(System.Security.IPermission)" />
      <Member Id="M:System.Security.Permissions.ResourcePermissionBase.IsSubsetOf(System.Security.IPermission)" />
      <Member Id="M:System.Security.Permissions.ResourcePermissionBase.IsUnrestricted" />
      <Member Id="M:System.Security.Permissions.ResourcePermissionBase.RemovePermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)" />
      <Member Id="M:System.Security.Permissions.ResourcePermissionBase.ToXml" />
      <Member Id="M:System.Security.Permissions.ResourcePermissionBase.Union(System.Security.IPermission)" />
      <Member Id="P:System.Security.Permissions.ResourcePermissionBase.PermissionAccessType" />
      <Member Id="P:System.Security.Permissions.ResourcePermissionBase.TagNames" />
    </Type>
    <Type Name="System.Security.Permissions.ResourcePermissionBaseEntry" Id="T:System.Security.Permissions.ResourcePermissionBaseEntry">
      <Member Id="M:System.Security.Permissions.ResourcePermissionBaseEntry.#ctor" />
      <Member Id="M:System.Security.Permissions.ResourcePermissionBaseEntry.#ctor(System.Int32,System.String[])" />
      <Member Id="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccess" />
      <Member Id="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath" />
    </Type>
    <Type Name="System.Security.Permissions.SecurityPermission" Id="T:System.Security.Permissions.SecurityPermission">
      <Member Id="M:System.Security.Permissions.SecurityPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <Member Id="M:System.Security.Permissions.SecurityPermission.#ctor(System.Security.Permissions.SecurityPermissionFlag)" />
      <Member Id="M:System.Security.Permissions.SecurityPermission.Copy" />
      <Member Id="M:System.Security.Permissions.SecurityPermission.FromXml(System.Security.SecurityElement)" />
      <Member Id="M:System.Security.Permissions.SecurityPermission.Intersect(System.Security.IPermission)" />
      <Member Id="M:System.Security.Permissions.SecurityPermission.IsSubsetOf(System.Security.IPermission)" />
      <Member Id="M:System.Security.Permissions.SecurityPermission.IsUnrestricted" />
      <Member Id="M:System.Security.Permissions.SecurityPermission.ToXml" />
      <Member Id="M:System.Security.Permissions.SecurityPermission.Union(System.Security.IPermission)" />
      <Member Id="P:System.Security.Permissions.SecurityPermission.Flags" />
    </Type>
    <Type Name="System.Security.Permissions.SiteIdentityPermission" Id="T:System.Security.Permissions.SiteIdentityPermission">
      <Member Id="M:System.Security.Permissions.SiteIdentityPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <Member Id="M:System.Security.Permissions.SiteIdentityPermission.#ctor(System.String)" />
      <Member Id="M:System.Security.Permissions.SiteIdentityPermission.Copy" />
      <Member Id="M:System.Security.Permissions.SiteIdentityPermission.FromXml(System.Security.SecurityElement)" />
      <Member Id="M:System.Security.Permissions.SiteIdentityPermission.Intersect(System.Security.IPermission)" />
      <Member Id="M:System.Security.Permissions.SiteIdentityPermission.IsSubsetOf(System.Security.IPermission)" />
      <Member Id="M:System.Security.Permissions.SiteIdentityPermission.ToXml" />
      <Member Id="M:System.Security.Permissions.SiteIdentityPermission.Union(System.Security.IPermission)" />
      <Member Id="P:System.Security.Permissions.SiteIdentityPermission.Site" />
    </Type>
    <Type Name="System.Security.Permissions.SiteIdentityPermissionAttribute" Id="T:System.Security.Permissions.SiteIdentityPermissionAttribute">
      <Member Id="M:System.Security.Permissions.SiteIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <Member Id="M:System.Security.Permissions.SiteIdentityPermissionAttribute.CreatePermission" />
      <Member Id="P:System.Security.Permissions.SiteIdentityPermissionAttribute.Site" />
    </Type>
    <Type Name="System.Security.Permissions.StorePermission" Id="T:System.Security.Permissions.StorePermission">
      <Member Id="M:System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.PermissionState)" />
      <Member Id="M:System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.StorePermissionFlags)" />
      <Member Id="M:System.Security.Permissions.StorePermission.Copy" />
      <Member Id="M:System.Security.Permissions.StorePermission.FromXml(System.Security.SecurityElement)" />
      <Member Id="M:System.Security.Permissions.StorePermission.Intersect(System.Security.IPermission)" />
      <Member Id="M:System.Security.Permissions.StorePermission.IsSubsetOf(System.Security.IPermission)" />
      <Member Id="M:System.Security.Permissions.StorePermission.IsUnrestricted" />
      <Member Id="M:System.Security.Permissions.StorePermission.ToXml" />
      <Member Id="M:System.Security.Permissions.StorePermission.Union(System.Security.IPermission)" />
      <Member Id="P:System.Security.Permissions.StorePermission.Flags" />
    </Type>
    <Type Name="System.Security.Permissions.StorePermissionAttribute" Id="T:System.Security.Permissions.StorePermissionAttribute">
      <Member Id="M:System.Security.Permissions.StorePermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <Member Id="M:System.Security.Permissions.StorePermissionAttribute.CreatePermission" />
      <Member Id="P:System.Security.Permissions.StorePermissionAttribute.AddToStore" />
      <Member Id="P:System.Security.Permissions.StorePermissionAttribute.CreateStore" />
      <Member Id="P:System.Security.Permissions.StorePermissionAttribute.DeleteStore" />
      <Member Id="P:System.Security.Permissions.StorePermissionAttribute.EnumerateCertificates" />
      <Member Id="P:System.Security.Permissions.StorePermissionAttribute.EnumerateStores" />
      <Member Id="P:System.Security.Permissions.StorePermissionAttribute.Flags" />
      <Member Id="P:System.Security.Permissions.StorePermissionAttribute.OpenStore" />
      <Member Id="P:System.Security.Permissions.StorePermissionAttribute.RemoveFromStore" />
    </Type>
    <Type Name="System.Security.Permissions.StorePermissionFlags" Id="T:System.Security.Permissions.StorePermissionFlags">
      <Member Id="F:System.Security.Permissions.StorePermissionFlags.AddToStore" />
      <Member Id="F:System.Security.Permissions.StorePermissionFlags.AllFlags" />
      <Member Id="F:System.Security.Permissions.StorePermissionFlags.CreateStore" />
      <Member Id="F:System.Security.Permissions.StorePermissionFlags.DeleteStore" />
      <Member Id="F:System.Security.Permissions.StorePermissionFlags.EnumerateCertificates" />
      <Member Id="F:System.Security.Permissions.StorePermissionFlags.EnumerateStores" />
      <Member Id="F:System.Security.Permissions.StorePermissionFlags.NoFlags" />
      <Member Id="F:System.Security.Permissions.StorePermissionFlags.OpenStore" />
      <Member Id="F:System.Security.Permissions.StorePermissionFlags.RemoveFromStore" />
    </Type>
    <Type Name="System.Security.Permissions.StrongNameIdentityPermission" Id="T:System.Security.Permissions.StrongNameIdentityPermission">
      <Member Id="M:System.Security.Permissions.StrongNameIdentityPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <Member Id="M:System.Security.Permissions.StrongNameIdentityPermission.#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)" />
      <Member Id="M:System.Security.Permissions.StrongNameIdentityPermission.Copy" />
      <Member Id="M:System.Security.Permissions.StrongNameIdentityPermission.FromXml(System.Security.SecurityElement)" />
      <Member Id="M:System.Security.Permissions.StrongNameIdentityPermission.Intersect(System.Security.IPermission)" />
      <Member Id="M:System.Security.Permissions.StrongNameIdentityPermission.IsSubsetOf(System.Security.IPermission)" />
      <Member Id="M:System.Security.Permissions.StrongNameIdentityPermission.ToXml" />
      <Member Id="M:System.Security.Permissions.StrongNameIdentityPermission.Union(System.Security.IPermission)" />
      <Member Id="P:System.Security.Permissions.StrongNameIdentityPermission.Name" />
      <Member Id="P:System.Security.Permissions.StrongNameIdentityPermission.PublicKey" />
      <Member Id="P:System.Security.Permissions.StrongNameIdentityPermission.Version" />
    </Type>
    <Type Name="System.Security.Permissions.StrongNameIdentityPermissionAttribute" Id="T:System.Security.Permissions.StrongNameIdentityPermissionAttribute">
      <Member Id="M:System.Security.Permissions.StrongNameIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <Member Id="M:System.Security.Permissions.StrongNameIdentityPermissionAttribute.CreatePermission" />
      <Member Id="P:System.Security.Permissions.StrongNameIdentityPermissionAttribute.Name" />
      <Member Id="P:System.Security.Permissions.StrongNameIdentityPermissionAttribute.PublicKey" />
      <Member Id="P:System.Security.Permissions.StrongNameIdentityPermissionAttribute.Version" />
    </Type>
    <Type Name="System.Security.Permissions.StrongNamePublicKeyBlob" Id="T:System.Security.Permissions.StrongNamePublicKeyBlob">
      <Member Id="M:System.Security.Permissions.StrongNamePublicKeyBlob.#ctor(System.Byte[])" />
      <Member Id="M:System.Security.Permissions.StrongNamePublicKeyBlob.Equals(System.Object)" />
      <Member Id="M:System.Security.Permissions.StrongNamePublicKeyBlob.GetHashCode" />
      <Member Id="M:System.Security.Permissions.StrongNamePublicKeyBlob.ToString" />
    </Type>
    <Type Name="System.Security.Permissions.TypeDescriptorPermission" Id="T:System.Security.Permissions.TypeDescriptorPermission">
      <Member Id="M:System.Security.Permissions.TypeDescriptorPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <Member Id="M:System.Security.Permissions.TypeDescriptorPermission.#ctor(System.Security.Permissions.TypeDescriptorPermissionFlags)" />
      <Member Id="M:System.Security.Permissions.TypeDescriptorPermission.Copy" />
      <Member Id="M:System.Security.Permissions.TypeDescriptorPermission.FromXml(System.Security.SecurityElement)" />
      <Member Id="M:System.Security.Permissions.TypeDescriptorPermission.Intersect(System.Security.IPermission)" />
      <Member Id="M:System.Security.Permissions.TypeDescriptorPermission.IsSubsetOf(System.Security.IPermission)" />
      <Member Id="M:System.Security.Permissions.TypeDescriptorPermission.IsUnrestricted" />
      <Member Id="M:System.Security.Permissions.TypeDescriptorPermission.ToXml" />
      <Member Id="M:System.Security.Permissions.TypeDescriptorPermission.Union(System.Security.IPermission)" />
      <Member Id="P:System.Security.Permissions.TypeDescriptorPermission.Flags" />
    </Type>
    <Type Name="System.Security.Permissions.TypeDescriptorPermissionAttribute" Id="T:System.Security.Permissions.TypeDescriptorPermissionAttribute">
      <Member Id="M:System.Security.Permissions.TypeDescriptorPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <Member Id="M:System.Security.Permissions.TypeDescriptorPermissionAttribute.CreatePermission" />
      <Member Id="P:System.Security.Permissions.TypeDescriptorPermissionAttribute.Flags" />
      <Member Id="P:System.Security.Permissions.TypeDescriptorPermissionAttribute.RestrictedRegistrationAccess" />
    </Type>
    <Type Name="System.Security.Permissions.TypeDescriptorPermissionFlags" Id="T:System.Security.Permissions.TypeDescriptorPermissionFlags">
      <Member Id="F:System.Security.Permissions.TypeDescriptorPermissionFlags.NoFlags" />
      <Member Id="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" />
    </Type>
    <Type Name="System.Security.Permissions.UIPermission" Id="T:System.Security.Permissions.UIPermission">
      <Member Id="M:System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <Member Id="M:System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionClipboard)" />
      <Member Id="M:System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionWindow)" />
      <Member Id="M:System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionWindow,System.Security.Permissions.UIPermissionClipboard)" />
      <Member Id="M:System.Security.Permissions.UIPermission.Copy" />
      <Member Id="M:System.Security.Permissions.UIPermission.FromXml(System.Security.SecurityElement)" />
      <Member Id="M:System.Security.Permissions.UIPermission.Intersect(System.Security.IPermission)" />
      <Member Id="M:System.Security.Permissions.UIPermission.IsSubsetOf(System.Security.IPermission)" />
      <Member Id="M:System.Security.Permissions.UIPermission.IsUnrestricted" />
      <Member Id="M:System.Security.Permissions.UIPermission.ToXml" />
      <Member Id="M:System.Security.Permissions.UIPermission.Union(System.Security.IPermission)" />
      <Member Id="P:System.Security.Permissions.UIPermission.Clipboard" />
      <Member Id="P:System.Security.Permissions.UIPermission.Window" />
    </Type>
    <Type Name="System.Security.Permissions.UIPermissionAttribute" Id="T:System.Security.Permissions.UIPermissionAttribute">
      <Member Id="M:System.Security.Permissions.UIPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <Member Id="M:System.Security.Permissions.UIPermissionAttribute.CreatePermission" />
      <Member Id="P:System.Security.Permissions.UIPermissionAttribute.Clipboard" />
      <Member Id="P:System.Security.Permissions.UIPermissionAttribute.Window" />
    </Type>
    <Type Name="System.Security.Permissions.UIPermissionClipboard" Id="T:System.Security.Permissions.UIPermissionClipboard">
      <Member Id="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" />
      <Member Id="F:System.Security.Permissions.UIPermissionClipboard.NoClipboard" />
      <Member Id="F:System.Security.Permissions.UIPermissionClipboard.OwnClipboard" />
    </Type>
    <Type Name="System.Security.Permissions.UIPermissionWindow" Id="T:System.Security.Permissions.UIPermissionWindow">
      <Member Id="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />
      <Member Id="F:System.Security.Permissions.UIPermissionWindow.NoWindows" />
      <Member Id="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" />
      <Member Id="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" />
    </Type>
    <Type Name="System.Security.Permissions.UrlIdentityPermission" Id="T:System.Security.Permissions.UrlIdentityPermission">
      <Member Id="M:System.Security.Permissions.UrlIdentityPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <Member Id="M:System.Security.Permissions.UrlIdentityPermission.#ctor(System.String)" />
      <Member Id="M:System.Security.Permissions.UrlIdentityPermission.Copy" />
      <Member Id="M:System.Security.Permissions.UrlIdentityPermission.FromXml(System.Security.SecurityElement)" />
      <Member Id="M:System.Security.Permissions.UrlIdentityPermission.Intersect(System.Security.IPermission)" />
      <Member Id="M:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf(System.Security.IPermission)" />
      <Member Id="M:System.Security.Permissions.UrlIdentityPermission.ToXml" />
      <Member Id="M:System.Security.Permissions.UrlIdentityPermission.Union(System.Security.IPermission)" />
      <Member Id="P:System.Security.Permissions.UrlIdentityPermission.Url" />
    </Type>
    <Type Name="System.Security.Permissions.UrlIdentityPermissionAttribute" Id="T:System.Security.Permissions.UrlIdentityPermissionAttribute">
      <Member Id="M:System.Security.Permissions.UrlIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <Member Id="M:System.Security.Permissions.UrlIdentityPermissionAttribute.CreatePermission" />
      <Member Id="P:System.Security.Permissions.UrlIdentityPermissionAttribute.Url" />
    </Type>
    <Type Name="System.Security.Permissions.WebBrowserPermission" Id="T:System.Security.Permissions.WebBrowserPermission">
      <Member Id="M:System.Security.Permissions.WebBrowserPermission.#ctor" />
      <Member Id="M:System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <Member Id="M:System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.WebBrowserPermissionLevel)" />
      <Member Id="M:System.Security.Permissions.WebBrowserPermission.Copy" />
      <Member Id="M:System.Security.Permissions.WebBrowserPermission.FromXml(System.Security.SecurityElement)" />
      <Member Id="M:System.Security.Permissions.WebBrowserPermission.Intersect(System.Security.IPermission)" />
      <Member Id="M:System.Security.Permissions.WebBrowserPermission.IsSubsetOf(System.Security.IPermission)" />
      <Member Id="M:System.Security.Permissions.WebBrowserPermission.IsUnrestricted" />
      <Member Id="M:System.Security.Permissions.WebBrowserPermission.ToXml" />
      <Member Id="M:System.Security.Permissions.WebBrowserPermission.Union(System.Security.IPermission)" />
      <Member Id="P:System.Security.Permissions.WebBrowserPermission.Level" />
    </Type>
    <Type Name="System.Security.Permissions.WebBrowserPermissionAttribute" Id="T:System.Security.Permissions.WebBrowserPermissionAttribute">
      <Member Id="M:System.Security.Permissions.WebBrowserPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <Member Id="M:System.Security.Permissions.WebBrowserPermissionAttribute.CreatePermission" />
      <Member Id="P:System.Security.Permissions.WebBrowserPermissionAttribute.Level" />
    </Type>
    <Type Name="System.Security.Permissions.WebBrowserPermissionLevel" Id="T:System.Security.Permissions.WebBrowserPermissionLevel">
      <Member Id="F:System.Security.Permissions.WebBrowserPermissionLevel.None" />
      <Member Id="F:System.Security.Permissions.WebBrowserPermissionLevel.Safe" />
      <Member Id="F:System.Security.Permissions.WebBrowserPermissionLevel.Unrestricted" />
    </Type>
    <Type Name="System.Security.Permissions.ZoneIdentityPermission" Id="T:System.Security.Permissions.ZoneIdentityPermission">
      <Member Id="M:System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <Member Id="M:System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.SecurityZone)" />
      <Member Id="M:System.Security.Permissions.ZoneIdentityPermission.Copy" />
      <Member Id="M:System.Security.Permissions.ZoneIdentityPermission.FromXml(System.Security.SecurityElement)" />
      <Member Id="M:System.Security.Permissions.ZoneIdentityPermission.Intersect(System.Security.IPermission)" />
      <Member Id="M:System.Security.Permissions.ZoneIdentityPermission.IsSubsetOf(System.Security.IPermission)" />
      <Member Id="M:System.Security.Permissions.ZoneIdentityPermission.ToXml" />
      <Member Id="M:System.Security.Permissions.ZoneIdentityPermission.Union(System.Security.IPermission)" />
      <Member Id="P:System.Security.Permissions.ZoneIdentityPermission.SecurityZone" />
    </Type>
    <Type Name="System.Security.Permissions.ZoneIdentityPermissionAttribute" Id="T:System.Security.Permissions.ZoneIdentityPermissionAttribute">
      <Member Id="M:System.Security.Permissions.ZoneIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <Member Id="M:System.Security.Permissions.ZoneIdentityPermissionAttribute.CreatePermission" />
      <Member Id="P:System.Security.Permissions.ZoneIdentityPermissionAttribute.Zone" />
    </Type>
  </Namespace>
  <Namespace Name="System.Security.Policy">
    <Type Name="System.Security.Policy.AllMembershipCondition" Id="T:System.Security.Policy.AllMembershipCondition">
      <Member Id="M:System.Security.Policy.AllMembershipCondition.#ctor" />
      <Member Id="M:System.Security.Policy.AllMembershipCondition.Check(System.Security.Policy.Evidence)" />
      <Member Id="M:System.Security.Policy.AllMembershipCondition.Copy" />
      <Member Id="M:System.Security.Policy.AllMembershipCondition.Equals(System.Object)" />
      <Member Id="M:System.Security.Policy.AllMembershipCondition.FromXml(System.Security.SecurityElement)" />
      <Member Id="M:System.Security.Policy.AllMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" />
      <Member Id="M:System.Security.Policy.AllMembershipCondition.GetHashCode" />
      <Member Id="M:System.Security.Policy.AllMembershipCondition.ToString" />
      <Member Id="M:System.Security.Policy.AllMembershipCondition.ToXml" />
      <Member Id="M:System.Security.Policy.AllMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)" />
    </Type>
    <Type Name="System.Security.Policy.ApplicationDirectory" Id="T:System.Security.Policy.ApplicationDirectory">
      <Member Id="M:System.Security.Policy.ApplicationDirectory.#ctor(System.String)" />
      <Member Id="M:System.Security.Policy.ApplicationDirectory.Copy" />
      <Member Id="M:System.Security.Policy.ApplicationDirectory.Equals(System.Object)" />
      <Member Id="M:System.Security.Policy.ApplicationDirectory.GetHashCode" />
      <Member Id="M:System.Security.Policy.ApplicationDirectory.ToString" />
      <Member Id="P:System.Security.Policy.ApplicationDirectory.Directory" />
    </Type>
    <Type Name="System.Security.Policy.ApplicationDirectoryMembershipCondition" Id="T:System.Security.Policy.ApplicationDirectoryMembershipCondition">
      <Member Id="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.#ctor" />
      <Member Id="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.Check(System.Security.Policy.Evidence)" />
      <Member Id="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.Copy" />
      <Member Id="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.Equals(System.Object)" />
      <Member Id="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.FromXml(System.Security.SecurityElement)" />
      <Member Id="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" />
      <Member Id="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.GetHashCode" />
      <Member Id="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.ToString" />
      <Member Id="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.ToXml" />
      <Member Id="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)" />
    </Type>
    <Type Name="System.Security.Policy.ApplicationTrust" Id="T:System.Security.Policy.ApplicationTrust">
      <Member Id="M:System.Security.Policy.ApplicationTrust.#ctor" />
      <Member Id="M:System.Security.Policy.ApplicationTrust.#ctor(System.ApplicationIdentity)" />
      <Member Id="M:System.Security.Policy.ApplicationTrust.#ctor(System.Security.PermissionSet,System.Collections.Generic.IEnumerable{System.Security.Policy.StrongName})" />
      <Member Id="M:System.Security.Policy.ApplicationTrust.FromXml(System.Security.SecurityElement)" />
      <Member Id="M:System.Security.Policy.ApplicationTrust.ToXml" />
      <Member Id="P:System.Security.Policy.ApplicationTrust.ApplicationIdentity" />
      <Member Id="P:System.Security.Policy.ApplicationTrust.DefaultGrantSet" />
      <Member Id="P:System.Security.Policy.ApplicationTrust.ExtraInfo" />
      <Member Id="P:System.Security.Policy.ApplicationTrust.FullTrustAssemblies" />
      <Member Id="P:System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun" />
      <Member Id="P:System.Security.Policy.ApplicationTrust.Persist" />
    </Type>
    <Type Name="System.Security.Policy.ApplicationTrustCollection" Id="T:System.Security.Policy.ApplicationTrustCollection">
      <Member Id="M:System.Security.Policy.ApplicationTrustCollection.Add(System.Security.Policy.ApplicationTrust)" />
      <Member Id="M:System.Security.Policy.ApplicationTrustCollection.AddRange(System.Security.Policy.ApplicationTrust[])" />
      <Member Id="M:System.Security.Policy.ApplicationTrustCollection.AddRange(System.Security.Policy.ApplicationTrustCollection)" />
      <Member Id="M:System.Security.Policy.ApplicationTrustCollection.Clear" />
      <Member Id="M:System.Security.Policy.ApplicationTrustCollection.CopyTo(System.Security.Policy.ApplicationTrust[],System.Int32)" />
      <Member Id="M:System.Security.Policy.ApplicationTrustCollection.Find(System.ApplicationIdentity,System.Security.Policy.ApplicationVersionMatch)" />
      <Member Id="M:System.Security.Policy.ApplicationTrustCollection.GetEnumerator" />
      <Member Id="M:System.Security.Policy.ApplicationTrustCollection.Remove(System.ApplicationIdentity,System.Security.Policy.ApplicationVersionMatch)" />
      <Member Id="M:System.Security.Policy.ApplicationTrustCollection.Remove(System.Security.Policy.ApplicationTrust)" />
      <Member Id="M:System.Security.Policy.ApplicationTrustCollection.RemoveRange(System.Security.Policy.ApplicationTrust[])" />
      <Member Id="M:System.Security.Policy.ApplicationTrustCollection.RemoveRange(System.Security.Policy.ApplicationTrustCollection)" />
      <Member Id="M:System.Security.Policy.ApplicationTrustCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <Member Id="M:System.Security.Policy.ApplicationTrustCollection.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="P:System.Security.Policy.ApplicationTrustCollection.Count" />
      <Member Id="P:System.Security.Policy.ApplicationTrustCollection.IsSynchronized" />
      <Member Id="P:System.Security.Policy.ApplicationTrustCollection.Item(System.Int32)" />
      <Member Id="P:System.Security.Policy.ApplicationTrustCollection.Item(System.String)" />
      <Member Id="P:System.Security.Policy.ApplicationTrustCollection.SyncRoot" />
    </Type>
    <Type Name="System.Security.Policy.ApplicationTrustEnumerator" Id="T:System.Security.Policy.ApplicationTrustEnumerator">
      <Member Id="M:System.Security.Policy.ApplicationTrustEnumerator.MoveNext" />
      <Member Id="M:System.Security.Policy.ApplicationTrustEnumerator.Reset" />
      <Member Id="P:System.Security.Policy.ApplicationTrustEnumerator.Current" />
      <Member Id="P:System.Security.Policy.ApplicationTrustEnumerator.System#Collections#IEnumerator#Current" />
    </Type>
    <Type Name="System.Security.Policy.ApplicationVersionMatch" Id="T:System.Security.Policy.ApplicationVersionMatch">
      <Member Id="F:System.Security.Policy.ApplicationVersionMatch.MatchAllVersions" />
      <Member Id="F:System.Security.Policy.ApplicationVersionMatch.MatchExactVersion" />
    </Type>
    <Type Name="System.Security.Policy.CodeConnectAccess" Id="T:System.Security.Policy.CodeConnectAccess">
      <Member Id="F:System.Security.Policy.CodeConnectAccess.AnyScheme" />
      <Member Id="F:System.Security.Policy.CodeConnectAccess.DefaultPort" />
      <Member Id="F:System.Security.Policy.CodeConnectAccess.OriginPort" />
      <Member Id="F:System.Security.Policy.CodeConnectAccess.OriginScheme" />
      <Member Id="M:System.Security.Policy.CodeConnectAccess.#ctor(System.String,System.Int32)" />
      <Member Id="M:System.Security.Policy.CodeConnectAccess.CreateAnySchemeAccess(System.Int32)" />
      <Member Id="M:System.Security.Policy.CodeConnectAccess.CreateOriginSchemeAccess(System.Int32)" />
      <Member Id="M:System.Security.Policy.CodeConnectAccess.Equals(System.Object)" />
      <Member Id="M:System.Security.Policy.CodeConnectAccess.GetHashCode" />
      <Member Id="P:System.Security.Policy.CodeConnectAccess.Port" />
      <Member Id="P:System.Security.Policy.CodeConnectAccess.Scheme" />
    </Type>
    <Type Name="System.Security.Policy.CodeGroup" Id="T:System.Security.Policy.CodeGroup">
      <Member Id="M:System.Security.Policy.CodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)" />
      <Member Id="M:System.Security.Policy.CodeGroup.AddChild(System.Security.Policy.CodeGroup)" />
      <Member Id="M:System.Security.Policy.CodeGroup.Copy" />
      <Member Id="M:System.Security.Policy.CodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" />
      <Member Id="M:System.Security.Policy.CodeGroup.Equals(System.Object)" />
      <Member Id="M:System.Security.Policy.CodeGroup.Equals(System.Security.Policy.CodeGroup,System.Boolean)" />
      <Member Id="M:System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement)" />
      <Member Id="M:System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" />
      <Member Id="M:System.Security.Policy.CodeGroup.GetHashCode" />
      <Member Id="M:System.Security.Policy.CodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" />
      <Member Id="M:System.Security.Policy.CodeGroup.RemoveChild(System.Security.Policy.CodeGroup)" />
      <Member Id="M:System.Security.Policy.CodeGroup.Resolve(System.Security.Policy.Evidence)" />
      <Member Id="M:System.Security.Policy.CodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)" />
      <Member Id="M:System.Security.Policy.CodeGroup.ToXml" />
      <Member Id="M:System.Security.Policy.CodeGroup.ToXml(System.Security.Policy.PolicyLevel)" />
      <Member Id="P:System.Security.Policy.CodeGroup.AttributeString" />
      <Member Id="P:System.Security.Policy.CodeGroup.Children" />
      <Member Id="P:System.Security.Policy.CodeGroup.Description" />
      <Member Id="P:System.Security.Policy.CodeGroup.MembershipCondition" />
      <Member Id="P:System.Security.Policy.CodeGroup.MergeLogic" />
      <Member Id="P:System.Security.Policy.CodeGroup.Name" />
      <Member Id="P:System.Security.Policy.CodeGroup.PermissionSetName" />
      <Member Id="P:System.Security.Policy.CodeGroup.PolicyStatement" />
    </Type>
    <Type Name="System.Security.Policy.FileCodeGroup" Id="T:System.Security.Policy.FileCodeGroup">
      <Member Id="M:System.Security.Policy.FileCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Permissions.FileIOPermissionAccess)" />
      <Member Id="M:System.Security.Policy.FileCodeGroup.Copy" />
      <Member Id="M:System.Security.Policy.FileCodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" />
      <Member Id="M:System.Security.Policy.FileCodeGroup.Equals(System.Object)" />
      <Member Id="M:System.Security.Policy.FileCodeGroup.GetHashCode" />
      <Member Id="M:System.Security.Policy.FileCodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" />
      <Member Id="M:System.Security.Policy.FileCodeGroup.Resolve(System.Security.Policy.Evidence)" />
      <Member Id="M:System.Security.Policy.FileCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)" />
      <Member Id="P:System.Security.Policy.FileCodeGroup.AttributeString" />
      <Member Id="P:System.Security.Policy.FileCodeGroup.MergeLogic" />
      <Member Id="P:System.Security.Policy.FileCodeGroup.PermissionSetName" />
    </Type>
    <Type Name="System.Security.Policy.FirstMatchCodeGroup" Id="T:System.Security.Policy.FirstMatchCodeGroup">
      <Member Id="M:System.Security.Policy.FirstMatchCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)" />
      <Member Id="M:System.Security.Policy.FirstMatchCodeGroup.Copy" />
      <Member Id="M:System.Security.Policy.FirstMatchCodeGroup.Resolve(System.Security.Policy.Evidence)" />
      <Member Id="M:System.Security.Policy.FirstMatchCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)" />
      <Member Id="P:System.Security.Policy.FirstMatchCodeGroup.MergeLogic" />
    </Type>
    <Type Name="System.Security.Policy.GacInstalled" Id="T:System.Security.Policy.GacInstalled">
      <Member Id="M:System.Security.Policy.GacInstalled.#ctor" />
      <Member Id="M:System.Security.Policy.GacInstalled.Copy" />
      <Member Id="M:System.Security.Policy.GacInstalled.CreateIdentityPermission(System.Security.Policy.Evidence)" />
      <Member Id="M:System.Security.Policy.GacInstalled.Equals(System.Object)" />
      <Member Id="M:System.Security.Policy.GacInstalled.GetHashCode" />
      <Member Id="M:System.Security.Policy.GacInstalled.ToString" />
    </Type>
    <Type Name="System.Security.Policy.GacMembershipCondition" Id="T:System.Security.Policy.GacMembershipCondition">
      <Member Id="M:System.Security.Policy.GacMembershipCondition.#ctor" />
      <Member Id="M:System.Security.Policy.GacMembershipCondition.Check(System.Security.Policy.Evidence)" />
      <Member Id="M:System.Security.Policy.GacMembershipCondition.Copy" />
      <Member Id="M:System.Security.Policy.GacMembershipCondition.Equals(System.Object)" />
      <Member Id="M:System.Security.Policy.GacMembershipCondition.FromXml(System.Security.SecurityElement)" />
      <Member Id="M:System.Security.Policy.GacMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" />
      <Member Id="M:System.Security.Policy.GacMembershipCondition.GetHashCode" />
      <Member Id="M:System.Security.Policy.GacMembershipCondition.ToString" />
      <Member Id="M:System.Security.Policy.GacMembershipCondition.ToXml" />
      <Member Id="M:System.Security.Policy.GacMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)" />
    </Type>
    <Type Name="System.Security.Policy.Hash" Id="T:System.Security.Policy.Hash">
      <Member Id="M:System.Security.Policy.Hash.#ctor(System.Reflection.Assembly)" />
      <Member Id="M:System.Security.Policy.Hash.CreateMD5(System.Byte[])" />
      <Member Id="M:System.Security.Policy.Hash.CreateSHA1(System.Byte[])" />
      <Member Id="M:System.Security.Policy.Hash.CreateSHA256(System.Byte[])" />
      <Member Id="M:System.Security.Policy.Hash.GenerateHash(System.Security.Cryptography.HashAlgorithm)" />
      <Member Id="M:System.Security.Policy.Hash.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="M:System.Security.Policy.Hash.ToString" />
      <Member Id="P:System.Security.Policy.Hash.MD5" />
      <Member Id="P:System.Security.Policy.Hash.SHA1" />
      <Member Id="P:System.Security.Policy.Hash.SHA256" />
    </Type>
    <Type Name="System.Security.Policy.HashMembershipCondition" Id="T:System.Security.Policy.HashMembershipCondition">
      <Member Id="M:System.Security.Policy.HashMembershipCondition.#ctor(System.Security.Cryptography.HashAlgorithm,System.Byte[])" />
      <Member Id="M:System.Security.Policy.HashMembershipCondition.Check(System.Security.Policy.Evidence)" />
      <Member Id="M:System.Security.Policy.HashMembershipCondition.Copy" />
      <Member Id="M:System.Security.Policy.HashMembershipCondition.Equals(System.Object)" />
      <Member Id="M:System.Security.Policy.HashMembershipCondition.FromXml(System.Security.SecurityElement)" />
      <Member Id="M:System.Security.Policy.HashMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" />
      <Member Id="M:System.Security.Policy.HashMembershipCondition.GetHashCode" />
      <Member Id="M:System.Security.Policy.HashMembershipCondition.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
      <Member Id="M:System.Security.Policy.HashMembershipCondition.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="M:System.Security.Policy.HashMembershipCondition.ToString" />
      <Member Id="M:System.Security.Policy.HashMembershipCondition.ToXml" />
      <Member Id="M:System.Security.Policy.HashMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)" />
      <Member Id="P:System.Security.Policy.HashMembershipCondition.HashAlgorithm" />
      <Member Id="P:System.Security.Policy.HashMembershipCondition.HashValue" />
    </Type>
    <Type Name="System.Security.Policy.IIdentityPermissionFactory" Id="T:System.Security.Policy.IIdentityPermissionFactory">
      <Member Id="M:System.Security.Policy.IIdentityPermissionFactory.CreateIdentityPermission(System.Security.Policy.Evidence)" />
    </Type>
    <Type Name="System.Security.Policy.IMembershipCondition" Id="T:System.Security.Policy.IMembershipCondition">
      <Member Id="M:System.Security.Policy.IMembershipCondition.Check(System.Security.Policy.Evidence)" />
      <Member Id="M:System.Security.Policy.IMembershipCondition.Copy" />
      <Member Id="M:System.Security.Policy.IMembershipCondition.Equals(System.Object)" />
      <Member Id="M:System.Security.Policy.IMembershipCondition.ToString" />
    </Type>
    <Type Name="System.Security.Policy.NetCodeGroup" Id="T:System.Security.Policy.NetCodeGroup">
      <Member Id="F:System.Security.Policy.NetCodeGroup.AbsentOriginScheme" />
      <Member Id="F:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme" />
      <Member Id="M:System.Security.Policy.NetCodeGroup.#ctor(System.Security.Policy.IMembershipCondition)" />
      <Member Id="M:System.Security.Policy.NetCodeGroup.AddConnectAccess(System.String,System.Security.Policy.CodeConnectAccess)" />
      <Member Id="M:System.Security.Policy.NetCodeGroup.Copy" />
      <Member Id="M:System.Security.Policy.NetCodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" />
      <Member Id="M:System.Security.Policy.NetCodeGroup.Equals(System.Object)" />
      <Member Id="M:System.Security.Policy.NetCodeGroup.GetConnectAccessRules" />
      <Member Id="M:System.Security.Policy.NetCodeGroup.GetHashCode" />
      <Member Id="M:System.Security.Policy.NetCodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" />
      <Member Id="M:System.Security.Policy.NetCodeGroup.ResetConnectAccess" />
      <Member Id="M:System.Security.Policy.NetCodeGroup.Resolve(System.Security.Policy.Evidence)" />
      <Member Id="M:System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)" />
      <Member Id="P:System.Security.Policy.NetCodeGroup.AttributeString" />
      <Member Id="P:System.Security.Policy.NetCodeGroup.MergeLogic" />
      <Member Id="P:System.Security.Policy.NetCodeGroup.PermissionSetName" />
    </Type>
    <Type Name="System.Security.Policy.PermissionRequestEvidence" Id="T:System.Security.Policy.PermissionRequestEvidence">
      <Member Id="M:System.Security.Policy.PermissionRequestEvidence.#ctor(System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)" />
      <Member Id="M:System.Security.Policy.PermissionRequestEvidence.Copy" />
      <Member Id="M:System.Security.Policy.PermissionRequestEvidence.ToString" />
      <Member Id="P:System.Security.Policy.PermissionRequestEvidence.DeniedPermissions" />
      <Member Id="P:System.Security.Policy.PermissionRequestEvidence.OptionalPermissions" />
      <Member Id="P:System.Security.Policy.PermissionRequestEvidence.RequestedPermissions" />
    </Type>
    <Type Name="System.Security.Policy.PolicyException" Id="T:System.Security.Policy.PolicyException">
      <Member Id="M:System.Security.Policy.PolicyException.#ctor" />
      <Member Id="M:System.Security.Policy.PolicyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <Member Id="M:System.Security.Policy.PolicyException.#ctor(System.String)" />
      <Member Id="M:System.Security.Policy.PolicyException.#ctor(System.String,System.Exception)" />
    </Type>
    <Type Name="System.Security.Policy.PolicyLevel" Id="T:System.Security.Policy.PolicyLevel">
      <Member Id="M:System.Security.Policy.PolicyLevel.AddFullTrustAssembly(System.Security.Policy.StrongName)" />
      <Member Id="M:System.Security.Policy.PolicyLevel.AddFullTrustAssembly(System.Security.Policy.StrongNameMembershipCondition)" />
      <Member Id="M:System.Security.Policy.PolicyLevel.AddNamedPermissionSet(System.Security.NamedPermissionSet)" />
      <Member Id="M:System.Security.Policy.PolicyLevel.ChangeNamedPermissionSet(System.String,System.Security.PermissionSet)" />
      <Member Id="M:System.Security.Policy.PolicyLevel.CreateAppDomainLevel" />
      <Member Id="M:System.Security.Policy.PolicyLevel.FromXml(System.Security.SecurityElement)" />
      <Member Id="M:System.Security.Policy.PolicyLevel.GetNamedPermissionSet(System.String)" />
      <Member Id="M:System.Security.Policy.PolicyLevel.Recover" />
      <Member Id="M:System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(System.Security.Policy.StrongName)" />
      <Member Id="M:System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(System.Security.Policy.StrongNameMembershipCondition)" />
      <Member Id="M:System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(System.Security.NamedPermissionSet)" />
      <Member Id="M:System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(System.String)" />
      <Member Id="M:System.Security.Policy.PolicyLevel.Reset" />
      <Member Id="M:System.Security.Policy.PolicyLevel.Resolve(System.Security.Policy.Evidence)" />
      <Member Id="M:System.Security.Policy.PolicyLevel.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)" />
      <Member Id="M:System.Security.Policy.PolicyLevel.ToXml" />
      <Member Id="P:System.Security.Policy.PolicyLevel.FullTrustAssemblies" />
      <Member Id="P:System.Security.Policy.PolicyLevel.Label" />
      <Member Id="P:System.Security.Policy.PolicyLevel.NamedPermissionSets" />
      <Member Id="P:System.Security.Policy.PolicyLevel.RootCodeGroup" />
      <Member Id="P:System.Security.Policy.PolicyLevel.StoreLocation" />
      <Member Id="P:System.Security.Policy.PolicyLevel.Type" />
    </Type>
    <Type Name="System.Security.Policy.PolicyStatement" Id="T:System.Security.Policy.PolicyStatement">
      <Member Id="M:System.Security.Policy.PolicyStatement.#ctor(System.Security.PermissionSet)" />
      <Member Id="M:System.Security.Policy.PolicyStatement.#ctor(System.Security.PermissionSet,System.Security.Policy.PolicyStatementAttribute)" />
      <Member Id="M:System.Security.Policy.PolicyStatement.Copy" />
      <Member Id="M:System.Security.Policy.PolicyStatement.Equals(System.Object)" />
      <Member Id="M:System.Security.Policy.PolicyStatement.FromXml(System.Security.SecurityElement)" />
      <Member Id="M:System.Security.Policy.PolicyStatement.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" />
      <Member Id="M:System.Security.Policy.PolicyStatement.GetHashCode" />
      <Member Id="M:System.Security.Policy.PolicyStatement.ToXml" />
      <Member Id="M:System.Security.Policy.PolicyStatement.ToXml(System.Security.Policy.PolicyLevel)" />
      <Member Id="P:System.Security.Policy.PolicyStatement.Attributes" />
      <Member Id="P:System.Security.Policy.PolicyStatement.AttributeString" />
      <Member Id="P:System.Security.Policy.PolicyStatement.PermissionSet" />
    </Type>
    <Type Name="System.Security.Policy.PolicyStatementAttribute" Id="T:System.Security.Policy.PolicyStatementAttribute">
      <Member Id="F:System.Security.Policy.PolicyStatementAttribute.All" />
      <Member Id="F:System.Security.Policy.PolicyStatementAttribute.Exclusive" />
      <Member Id="F:System.Security.Policy.PolicyStatementAttribute.LevelFinal" />
      <Member Id="F:System.Security.Policy.PolicyStatementAttribute.Nothing" />
    </Type>
    <Type Name="System.Security.Policy.Publisher" Id="T:System.Security.Policy.Publisher">
      <Member Id="M:System.Security.Policy.Publisher.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)" />
      <Member Id="M:System.Security.Policy.Publisher.Copy" />
      <Member Id="M:System.Security.Policy.Publisher.CreateIdentityPermission(System.Security.Policy.Evidence)" />
      <Member Id="M:System.Security.Policy.Publisher.Equals(System.Object)" />
      <Member Id="M:System.Security.Policy.Publisher.GetHashCode" />
      <Member Id="M:System.Security.Policy.Publisher.ToString" />
      <Member Id="P:System.Security.Policy.Publisher.Certificate" />
    </Type>
    <Type Name="System.Security.Policy.PublisherMembershipCondition" Id="T:System.Security.Policy.PublisherMembershipCondition">
      <Member Id="M:System.Security.Policy.PublisherMembershipCondition.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)" />
      <Member Id="M:System.Security.Policy.PublisherMembershipCondition.Check(System.Security.Policy.Evidence)" />
      <Member Id="M:System.Security.Policy.PublisherMembershipCondition.Copy" />
      <Member Id="M:System.Security.Policy.PublisherMembershipCondition.Equals(System.Object)" />
      <Member Id="M:System.Security.Policy.PublisherMembershipCondition.FromXml(System.Security.SecurityElement)" />
      <Member Id="M:System.Security.Policy.PublisherMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" />
      <Member Id="M:System.Security.Policy.PublisherMembershipCondition.GetHashCode" />
      <Member Id="M:System.Security.Policy.PublisherMembershipCondition.ToString" />
      <Member Id="M:System.Security.Policy.PublisherMembershipCondition.ToXml" />
      <Member Id="M:System.Security.Policy.PublisherMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)" />
      <Member Id="P:System.Security.Policy.PublisherMembershipCondition.Certificate" />
    </Type>
    <Type Name="System.Security.Policy.Site" Id="T:System.Security.Policy.Site">
      <Member Id="M:System.Security.Policy.Site.#ctor(System.String)" />
      <Member Id="M:System.Security.Policy.Site.Copy" />
      <Member Id="M:System.Security.Policy.Site.CreateFromUrl(System.String)" />
      <Member Id="M:System.Security.Policy.Site.CreateIdentityPermission(System.Security.Policy.Evidence)" />
      <Member Id="M:System.Security.Policy.Site.Equals(System.Object)" />
      <Member Id="M:System.Security.Policy.Site.GetHashCode" />
      <Member Id="M:System.Security.Policy.Site.ToString" />
      <Member Id="P:System.Security.Policy.Site.Name" />
    </Type>
    <Type Name="System.Security.Policy.SiteMembershipCondition" Id="T:System.Security.Policy.SiteMembershipCondition">
      <Member Id="M:System.Security.Policy.SiteMembershipCondition.#ctor(System.String)" />
      <Member Id="M:System.Security.Policy.SiteMembershipCondition.Check(System.Security.Policy.Evidence)" />
      <Member Id="M:System.Security.Policy.SiteMembershipCondition.Copy" />
      <Member Id="M:System.Security.Policy.SiteMembershipCondition.Equals(System.Object)" />
      <Member Id="M:System.Security.Policy.SiteMembershipCondition.FromXml(System.Security.SecurityElement)" />
      <Member Id="M:System.Security.Policy.SiteMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" />
      <Member Id="M:System.Security.Policy.SiteMembershipCondition.GetHashCode" />
      <Member Id="M:System.Security.Policy.SiteMembershipCondition.ToString" />
      <Member Id="M:System.Security.Policy.SiteMembershipCondition.ToXml" />
      <Member Id="M:System.Security.Policy.SiteMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)" />
      <Member Id="P:System.Security.Policy.SiteMembershipCondition.Site" />
    </Type>
    <Type Name="System.Security.Policy.StrongName" Id="T:System.Security.Policy.StrongName">
      <Member Id="M:System.Security.Policy.StrongName.#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)" />
      <Member Id="M:System.Security.Policy.StrongName.Copy" />
      <Member Id="M:System.Security.Policy.StrongName.CreateIdentityPermission(System.Security.Policy.Evidence)" />
      <Member Id="M:System.Security.Policy.StrongName.Equals(System.Object)" />
      <Member Id="M:System.Security.Policy.StrongName.GetHashCode" />
      <Member Id="M:System.Security.Policy.StrongName.ToString" />
      <Member Id="P:System.Security.Policy.StrongName.Name" />
      <Member Id="P:System.Security.Policy.StrongName.PublicKey" />
      <Member Id="P:System.Security.Policy.StrongName.Version" />
    </Type>
    <Type Name="System.Security.Policy.StrongNameMembershipCondition" Id="T:System.Security.Policy.StrongNameMembershipCondition">
      <Member Id="M:System.Security.Policy.StrongNameMembershipCondition.#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)" />
      <Member Id="M:System.Security.Policy.StrongNameMembershipCondition.Check(System.Security.Policy.Evidence)" />
      <Member Id="M:System.Security.Policy.StrongNameMembershipCondition.Copy" />
      <Member Id="M:System.Security.Policy.StrongNameMembershipCondition.Equals(System.Object)" />
      <Member Id="M:System.Security.Policy.StrongNameMembershipCondition.FromXml(System.Security.SecurityElement)" />
      <Member Id="M:System.Security.Policy.StrongNameMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" />
      <Member Id="M:System.Security.Policy.StrongNameMembershipCondition.GetHashCode" />
      <Member Id="M:System.Security.Policy.StrongNameMembershipCondition.ToString" />
      <Member Id="M:System.Security.Policy.StrongNameMembershipCondition.ToXml" />
      <Member Id="M:System.Security.Policy.StrongNameMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)" />
      <Member Id="P:System.Security.Policy.StrongNameMembershipCondition.Name" />
      <Member Id="P:System.Security.Policy.StrongNameMembershipCondition.PublicKey" />
      <Member Id="P:System.Security.Policy.StrongNameMembershipCondition.Version" />
    </Type>
    <Type Name="System.Security.Policy.TrustManagerContext" Id="T:System.Security.Policy.TrustManagerContext">
      <Member Id="M:System.Security.Policy.TrustManagerContext.#ctor" />
      <Member Id="M:System.Security.Policy.TrustManagerContext.#ctor(System.Security.Policy.TrustManagerUIContext)" />
      <Member Id="P:System.Security.Policy.TrustManagerContext.IgnorePersistedDecision" />
      <Member Id="P:System.Security.Policy.TrustManagerContext.KeepAlive" />
      <Member Id="P:System.Security.Policy.TrustManagerContext.NoPrompt" />
      <Member Id="P:System.Security.Policy.TrustManagerContext.Persist" />
      <Member Id="P:System.Security.Policy.TrustManagerContext.PreviousApplicationIdentity" />
      <Member Id="P:System.Security.Policy.TrustManagerContext.UIContext" />
    </Type>
    <Type Name="System.Security.Policy.TrustManagerUIContext" Id="T:System.Security.Policy.TrustManagerUIContext">
      <Member Id="F:System.Security.Policy.TrustManagerUIContext.Install" />
      <Member Id="F:System.Security.Policy.TrustManagerUIContext.Run" />
      <Member Id="F:System.Security.Policy.TrustManagerUIContext.Upgrade" />
    </Type>
    <Type Name="System.Security.Policy.UnionCodeGroup" Id="T:System.Security.Policy.UnionCodeGroup">
      <Member Id="M:System.Security.Policy.UnionCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)" />
      <Member Id="M:System.Security.Policy.UnionCodeGroup.Copy" />
      <Member Id="M:System.Security.Policy.UnionCodeGroup.Resolve(System.Security.Policy.Evidence)" />
      <Member Id="M:System.Security.Policy.UnionCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)" />
      <Member Id="P:System.Security.Policy.UnionCodeGroup.MergeLogic" />
    </Type>
    <Type Name="System.Security.Policy.Url" Id="T:System.Security.Policy.Url">
      <Member Id="M:System.Security.Policy.Url.#ctor(System.String)" />
      <Member Id="M:System.Security.Policy.Url.Copy" />
      <Member Id="M:System.Security.Policy.Url.CreateIdentityPermission(System.Security.Policy.Evidence)" />
      <Member Id="M:System.Security.Policy.Url.Equals(System.Object)" />
      <Member Id="M:System.Security.Policy.Url.GetHashCode" />
      <Member Id="M:System.Security.Policy.Url.ToString" />
      <Member Id="P:System.Security.Policy.Url.Value" />
    </Type>
    <Type Name="System.Security.Policy.UrlMembershipCondition" Id="T:System.Security.Policy.UrlMembershipCondition">
      <Member Id="M:System.Security.Policy.UrlMembershipCondition.#ctor(System.String)" />
      <Member Id="M:System.Security.Policy.UrlMembershipCondition.Check(System.Security.Policy.Evidence)" />
      <Member Id="M:System.Security.Policy.UrlMembershipCondition.Copy" />
      <Member Id="M:System.Security.Policy.UrlMembershipCondition.Equals(System.Object)" />
      <Member Id="M:System.Security.Policy.UrlMembershipCondition.FromXml(System.Security.SecurityElement)" />
      <Member Id="M:System.Security.Policy.UrlMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" />
      <Member Id="M:System.Security.Policy.UrlMembershipCondition.GetHashCode" />
      <Member Id="M:System.Security.Policy.UrlMembershipCondition.ToString" />
      <Member Id="M:System.Security.Policy.UrlMembershipCondition.ToXml" />
      <Member Id="M:System.Security.Policy.UrlMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)" />
      <Member Id="P:System.Security.Policy.UrlMembershipCondition.Url" />
    </Type>
    <Type Name="System.Security.Policy.Zone" Id="T:System.Security.Policy.Zone">
      <Member Id="M:System.Security.Policy.Zone.#ctor(System.Security.SecurityZone)" />
      <Member Id="M:System.Security.Policy.Zone.Copy" />
      <Member Id="M:System.Security.Policy.Zone.CreateFromUrl(System.String)" />
      <Member Id="M:System.Security.Policy.Zone.CreateIdentityPermission(System.Security.Policy.Evidence)" />
      <Member Id="M:System.Security.Policy.Zone.Equals(System.Object)" />
      <Member Id="M:System.Security.Policy.Zone.GetHashCode" />
      <Member Id="M:System.Security.Policy.Zone.ToString" />
      <Member Id="P:System.Security.Policy.Zone.SecurityZone" />
    </Type>
    <Type Name="System.Security.Policy.ZoneMembershipCondition" Id="T:System.Security.Policy.ZoneMembershipCondition">
      <Member Id="M:System.Security.Policy.ZoneMembershipCondition.#ctor(System.Security.SecurityZone)" />
      <Member Id="M:System.Security.Policy.ZoneMembershipCondition.Check(System.Security.Policy.Evidence)" />
      <Member Id="M:System.Security.Policy.ZoneMembershipCondition.Copy" />
      <Member Id="M:System.Security.Policy.ZoneMembershipCondition.Equals(System.Object)" />
      <Member Id="M:System.Security.Policy.ZoneMembershipCondition.FromXml(System.Security.SecurityElement)" />
      <Member Id="M:System.Security.Policy.ZoneMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" />
      <Member Id="M:System.Security.Policy.ZoneMembershipCondition.GetHashCode" />
      <Member Id="M:System.Security.Policy.ZoneMembershipCondition.ToString" />
      <Member Id="M:System.Security.Policy.ZoneMembershipCondition.ToXml" />
      <Member Id="M:System.Security.Policy.ZoneMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)" />
      <Member Id="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" />
    </Type>
  </Namespace>
  <Namespace Name="System.ServiceProcess">
    <Type Name="System.ServiceProcess.ServiceControllerPermission" Id="T:System.ServiceProcess.ServiceControllerPermission">
      <Member Id="M:System.ServiceProcess.ServiceControllerPermission.#ctor" />
      <Member Id="M:System.ServiceProcess.ServiceControllerPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <Member Id="M:System.ServiceProcess.ServiceControllerPermission.#ctor(System.ServiceProcess.ServiceControllerPermissionAccess,System.String,System.String)" />
      <Member Id="M:System.ServiceProcess.ServiceControllerPermission.#ctor(System.ServiceProcess.ServiceControllerPermissionEntry[])" />
      <Member Id="P:System.ServiceProcess.ServiceControllerPermission.PermissionEntries" />
    </Type>
    <Type Name="System.ServiceProcess.ServiceControllerPermissionAccess" Id="T:System.ServiceProcess.ServiceControllerPermissionAccess">
      <Member Id="F:System.ServiceProcess.ServiceControllerPermissionAccess.Browse" />
      <Member Id="F:System.ServiceProcess.ServiceControllerPermissionAccess.Control" />
      <Member Id="F:System.ServiceProcess.ServiceControllerPermissionAccess.None" />
    </Type>
    <Type Name="System.ServiceProcess.ServiceControllerPermissionAttribute" Id="T:System.ServiceProcess.ServiceControllerPermissionAttribute">
      <Member Id="M:System.ServiceProcess.ServiceControllerPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <Member Id="M:System.ServiceProcess.ServiceControllerPermissionAttribute.CreatePermission" />
      <Member Id="P:System.ServiceProcess.ServiceControllerPermissionAttribute.MachineName" />
      <Member Id="P:System.ServiceProcess.ServiceControllerPermissionAttribute.PermissionAccess" />
      <Member Id="P:System.ServiceProcess.ServiceControllerPermissionAttribute.ServiceName" />
    </Type>
    <Type Name="System.ServiceProcess.ServiceControllerPermissionEntry" Id="T:System.ServiceProcess.ServiceControllerPermissionEntry">
      <Member Id="M:System.ServiceProcess.ServiceControllerPermissionEntry.#ctor" />
      <Member Id="M:System.ServiceProcess.ServiceControllerPermissionEntry.#ctor(System.ServiceProcess.ServiceControllerPermissionAccess,System.String,System.String)" />
      <Member Id="P:System.ServiceProcess.ServiceControllerPermissionEntry.MachineName" />
      <Member Id="P:System.ServiceProcess.ServiceControllerPermissionEntry.PermissionAccess" />
      <Member Id="P:System.ServiceProcess.ServiceControllerPermissionEntry.ServiceName" />
    </Type>
    <Type Name="System.ServiceProcess.ServiceControllerPermissionEntryCollection" Id="T:System.ServiceProcess.ServiceControllerPermissionEntryCollection">
      <Member Id="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Add(System.ServiceProcess.ServiceControllerPermissionEntry)" />
      <Member Id="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.AddRange(System.ServiceProcess.ServiceControllerPermissionEntry[])" />
      <Member Id="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.AddRange(System.ServiceProcess.ServiceControllerPermissionEntryCollection)" />
      <Member Id="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Contains(System.ServiceProcess.ServiceControllerPermissionEntry)" />
      <Member Id="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.CopyTo(System.ServiceProcess.ServiceControllerPermissionEntry[],System.Int32)" />
      <Member Id="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.IndexOf(System.ServiceProcess.ServiceControllerPermissionEntry)" />
      <Member Id="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Insert(System.Int32,System.ServiceProcess.ServiceControllerPermissionEntry)" />
      <Member Id="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.OnClear" />
      <Member Id="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.OnInsert(System.Int32,System.Object)" />
      <Member Id="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.OnRemove(System.Int32,System.Object)" />
      <Member Id="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.OnSet(System.Int32,System.Object,System.Object)" />
      <Member Id="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Remove(System.ServiceProcess.ServiceControllerPermissionEntry)" />
      <Member Id="P:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Item(System.Int32)" />
    </Type>
  </Namespace>
  <Namespace Name="System.Transactions">
    <Type Name="System.Transactions.DistributedTransactionPermission" Id="T:System.Transactions.DistributedTransactionPermission">
      <Member Id="M:System.Transactions.DistributedTransactionPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <Member Id="M:System.Transactions.DistributedTransactionPermission.Copy" />
      <Member Id="M:System.Transactions.DistributedTransactionPermission.FromXml(System.Security.SecurityElement)" />
      <Member Id="M:System.Transactions.DistributedTransactionPermission.Intersect(System.Security.IPermission)" />
      <Member Id="M:System.Transactions.DistributedTransactionPermission.IsSubsetOf(System.Security.IPermission)" />
      <Member Id="M:System.Transactions.DistributedTransactionPermission.IsUnrestricted" />
      <Member Id="M:System.Transactions.DistributedTransactionPermission.ToXml" />
      <Member Id="M:System.Transactions.DistributedTransactionPermission.Union(System.Security.IPermission)" />
    </Type>
    <Type Name="System.Transactions.DistributedTransactionPermissionAttribute" Id="T:System.Transactions.DistributedTransactionPermissionAttribute">
      <Member Id="M:System.Transactions.DistributedTransactionPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <Member Id="M:System.Transactions.DistributedTransactionPermissionAttribute.CreatePermission" />
      <Member Id="P:System.Transactions.DistributedTransactionPermissionAttribute.Unrestricted" />
    </Type>
  </Namespace>
  <Namespace Name="System.Web">
    <Type Name="System.Web.AspNetHostingPermission" Id="T:System.Web.AspNetHostingPermission">
      <Member Id="M:System.Web.AspNetHostingPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <Member Id="M:System.Web.AspNetHostingPermission.#ctor(System.Web.AspNetHostingPermissionLevel)" />
      <Member Id="M:System.Web.AspNetHostingPermission.Copy" />
      <Member Id="M:System.Web.AspNetHostingPermission.FromXml(System.Security.SecurityElement)" />
      <Member Id="M:System.Web.AspNetHostingPermission.Intersect(System.Security.IPermission)" />
      <Member Id="M:System.Web.AspNetHostingPermission.IsSubsetOf(System.Security.IPermission)" />
      <Member Id="M:System.Web.AspNetHostingPermission.IsUnrestricted" />
      <Member Id="M:System.Web.AspNetHostingPermission.ToXml" />
      <Member Id="M:System.Web.AspNetHostingPermission.Union(System.Security.IPermission)" />
      <Member Id="P:System.Web.AspNetHostingPermission.Level" />
    </Type>
    <Type Name="System.Web.AspNetHostingPermissionAttribute" Id="T:System.Web.AspNetHostingPermissionAttribute">
      <Member Id="M:System.Web.AspNetHostingPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
      <Member Id="M:System.Web.AspNetHostingPermissionAttribute.CreatePermission" />
      <Member Id="P:System.Web.AspNetHostingPermissionAttribute.Level" />
    </Type>
    <Type Name="System.Web.AspNetHostingPermissionLevel" Id="T:System.Web.AspNetHostingPermissionLevel">
      <Member Id="F:System.Web.AspNetHostingPermissionLevel.High" />
      <Member Id="F:System.Web.AspNetHostingPermissionLevel.Low" />
      <Member Id="F:System.Web.AspNetHostingPermissionLevel.Medium" />
      <Member Id="F:System.Web.AspNetHostingPermissionLevel.Minimal" />
      <Member Id="F:System.Web.AspNetHostingPermissionLevel.None" />
      <Member Id="F:System.Web.AspNetHostingPermissionLevel.Unrestricted" />
    </Type>
  </Namespace>
  <Namespace Name="System.Xaml.Permissions">
    <Type Name="System.Xaml.Permissions.XamlLoadPermission" Id="T:System.Xaml.Permissions.XamlLoadPermission">
      <Member Id="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Collections.Generic.IEnumerable{System.Xaml.Permissions.XamlAccessLevel})" />
      <Member Id="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <Member Id="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Xaml.Permissions.XamlAccessLevel)" />
      <Member Id="M:System.Xaml.Permissions.XamlLoadPermission.Copy" />
      <Member Id="M:System.Xaml.Permissions.XamlLoadPermission.Equals(System.Object)" />
      <Member Id="M:System.Xaml.Permissions.XamlLoadPermission.FromXml(System.Security.SecurityElement)" />
      <Member Id="M:System.Xaml.Permissions.XamlLoadPermission.GetHashCode" />
      <Member Id="M:System.Xaml.Permissions.XamlLoadPermission.Includes(System.Xaml.Permissions.XamlAccessLevel)" />
      <Member Id="M:System.Xaml.Permissions.XamlLoadPermission.Intersect(System.Security.IPermission)" />
      <Member Id="M:System.Xaml.Permissions.XamlLoadPermission.IsSubsetOf(System.Security.IPermission)" />
      <Member Id="M:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted" />
      <Member Id="M:System.Xaml.Permissions.XamlLoadPermission.ToXml" />
      <Member Id="M:System.Xaml.Permissions.XamlLoadPermission.Union(System.Security.IPermission)" />
      <Member Id="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" />
    </Type>
  </Namespace>
</Framework>